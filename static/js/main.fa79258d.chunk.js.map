{"version":3,"sources":["redux/modules/setting/type.ts","redux/modules/setting/selector.ts","helper/dateHelper.ts","redux/modules/common/selector.ts","constants/externalUrls.ts","components/common/footer/footer.tsx","contracts/generated/Enum/oAuthProviderType.ts","helper/dialogHelper.ts","helper/typescriptHacks.ts","constants/apiEndpoints.ts","services/StorageService.ts","services/api/AssistantAppsApiService.ts","constants/storageType.ts","services/BaseApiService.ts","constants/ToastOptions.ts","services/common/ToastService.ts","integration/dependencyInjection.tsx","components/common/conditionalTooltip.tsx","redux/modules/common/type.ts","redux/modules/common/action.ts","components/dialog/loginDialog.tsx","components/dialog/loginDialog.redux.ts","components/common/header/header.tsx","components/common/scroll/scrollToTop.tsx","constants/route.ts","components/screenshotSlider/screenshotFrame.tsx","components/screenshotSlider/screenshotImage.tsx","helper/timeoutHelper.ts","helper/nameHelper.ts","components/screenshotSlider/screenshotSlider.tsx","constants/networkState.ts","components/common/scroll/scrollDownIndicator.tsx","components/common/banner/banner.tsx","components/section/asymmetricBoxes.tsx","constants/homePageConstants.ts","pages/home/homePresenter.tsx","mapper/appDetailsMapper.ts","helper/countryCodeHelper.ts","redux/modules/translation/type.ts","redux/modules/translation/selector.ts","components/common/dropDown/dropDown.tsx","components/common/error.tsx","components/common/loading.tsx","components/common/loginRequired.tsx","components/translationSearch/translationSearch.tsx","components/translationVote/translationVoteItem.tsx","components/translationVote/translationVotePresenter.tsx","components/translationVote/translationVoteContainer.tsx","components/translationImages/translationImages.tsx","pages/translation/translationComponents.tsx","pages/translation/translationPresenter.tsx","pages/translation/translationContainer.tsx","mapper/languageDetailsMapper.ts","pages/translation/translation.redux.ts","redux/modules/translation/action.ts","mapper/languageColourMapper.ts","components/common/graph/tooltipWithFlag.tsx","components/common/graph/xAxis.tsx","components/translationGraphs/numberOfTranslationsPerLanguage.tsx","contracts/generated/Enum/adminApprovalStatus.ts","pages/stats/statsPresenter.tsx","components/guide/userGuideTile.tsx","pages/guide/guidListPage.Redux.ts","pages/guide/guideListPage.tsx","contracts/generated/Enum/guideSectionItemType.ts","components/common/modal/baseDialog.tsx","components/common/tagComponent.tsx","components/guide/addGuideComponents.tsx","helper/guidHelper.ts","components/common/markdown.tsx","components/common/lazyLoadImage/lazyLoadImage.tsx","pages/guide/guideComponents.tsx","pages/guide/createGuideSectionItems.tsx","pages/guide/createGuideSections.tsx","pages/guide/createGuidePage.tsx","pages/notFoundPresenter.tsx","App.tsx","App.redux.ts","redux/modules/setting/action.ts","utils.ts","helper/bodyHelper.ts","redux/modules/common/index.ts","redux/modules/setting/index.ts","redux/modules/translation/index.ts","redux/index.ts","redux/cacheKey.ts","serviceWorker.ts","index.tsx","redux/stateFromLocalStorage.ts"],"names":["DARKMODE","getIsDark","state","settingReducer","isDark","getMenuVisibility","menuIsVisible","getExpiryDateUtc","timeTillExpiry","moment","add","utc","toDate","getIsLoading","commonReducer","isLoading","getUserGuid","getIsExpiredUserDetailsDate","userGuid","getUserProfileUrl","userProfileUrl","getUserName","userName","orig","value","userDetailsExpiryDate","isBefore","ExternalUrls","assistantApps","assistantAppsApi","kurtlourensEmail","kurtlourens","patreon","kurtlourensFacebook","kurtlourensTwitter","kurtlourensLinkedIn","OAuthProviderType","Footer","className","href","target","rel","src","alt","Date","getFullYear","packageJson","version","getStringDialog","title","currentValue","placeholder","Swal","fire","input","inputValue","inputPlaceholder","showCancelButton","text","successDialog","message","icon","errorDialog","anyObject","guideParam","guide","getForCurrentUser","getGuideById","submitGuide","editGuide","deleteGuide","StorageService","key","itemString","localStorage","getItem","item","JSON","parse","data","expiryDate","isAfter","isSuccess","errorMessage","expiry","oneHourFromNw","setItem","stringify","AssistantAppsApiService","getApps","get","getLanguages","getTranslationKeys","searchObj","post","getTranslationKeysSearchDropdown","getTranslationImages","translationKeyGuid","getTranslationVotes","getSubmittedTranslations","languageGuid","submitTranslation","deleteTranslation","guid","delete","selectTranslationVote","reportTranslation","getTranslationsPerLangGraphData","getTranslators","getGuidesForUser","search","apiEndpoints","getGuidesById","id","replace","newGuide","edittedGuide","oAuthObj","this","headers","token","tokenexpiry","userguid","setInterceptors","storageServ","set","username","apiResult","loginData","secondsTillExpire","profileUrl","newBaseUrl","_baseUrl","window","config","apiUrl","axios","defaults","common","tokenFromStorage","ex","url","result","manipulateHeaders","statusCode","response","status","defaultToastProps","position","autoClose","rtl","hideProgressBar","closeOnClick","pauseOnFocusLoss","draggable","pauseOnHover","ToastService","success","displayProps","toast","error","defaultDependencyInjectionFunc","assistantAppsApiService","toastService","DependencyInjectionContext","React","createContext","DependencyInjectionProvider","props","children","Provider","withServices","WrappedComponent","mapper","Consumer","services","ConditionalToolTip","showToolTip","Popup","wide","content","trigger","LOADING","LOGIN","LOGOUT","setLoadingStatus","type","LoginDialog","connect","dispatch","newProps","login","logout","useContext","useState","isModalOpen","setModalOpen","oAuthLoginFailure","console","warn","details","toggleModalOpen","LoginComponent","length","onClick","allowEnterKey","allowEscapeKey","then","answer","isConfirmed","Icon","inverted","name","color","colour","size","style","iconStyle","googleLoginButton","clientId","googleClientId","render","renderProps","opacity","disabled","maxWidth","backgroundColor","buttonText","onSuccess","google","tokenId","profileObj","accessToken","email","imageUrl","custom","apiObj","oAuthType","loginWithOAuth","loginResult","onFailure","cookiePolicy","showDialog","Modal","dimmer","open","onClose","Header","Content","toggleOpen","setState","prevState","isOpen","links","route","iconName","height","display","paddingLeft","aria-controls","aria-expanded","aria-label","data-toggle","data-target","classNames","map","to","Component","ScrollToTopWithoutRoute","prevProps","location","scrollTo","ScrollToTop","withRouter","ScreenshotFrame","ScreenshotImage","imageName","imageAlt","wait","ms","Promise","resolve","setTimeout","getAppNameFromImage","currentImage","includes","NetworkState","ScreenshotSlider","screenShotList","index","setIndex","oldIndex","setOldIndex","indexIsNew","setIndexIsNew","appName","setAppName","useEffect","intervalId","secondsPerImage","setInterval","rotateImage","clearInterval","localIndex","newIndex","transitionImages","preloadImage","oldImage","flowing","ScrollDownArrowsIndicator","Banner","fontSize","role","SmallBanner","descrip","AsymmetricBoxes","items","link","asymmetricBoxItems","HomePresenter","appDetailsToAppDropDownMapper","appDetails","gameName","image","iconUrl","getImageUrlFromCountryCode","code","EDITITEM","getTranslationItems","translationReducer","translationItems","DropDown","undefined","defaultValue","Dropdown","fluid","selection","multiple","loading","options","onChange","e","Error","textAlign","Loading","listStyleType","SmallLoading","verticalAlign","LoginRequired","Segment","minHeight","padding","justifyContent","TranslationSearch","getFilteredDropdownList","translationKeys","translationKeyDropdown","filter","tkd","findIndex","tk","event","params","newValue","getSuggestions","lowerValue","toLowerCase","filteredDropdownList","translation","slice","getSuggestionValue","onSuggestionsFetchRequested","suggestions","onSuggestionsSelected","guidToLookup","suggestion","setTranslationIndex","onSuggestionsClearRequested","filtered","currentTranslation","translationKeyDropdownStatus","inputProps","onSuggestionSelected","renderSuggestion","Button","inputAttributes","autocapitalize","confirmButtonText","isNaN","log","TranslationVoteItem","translationTextIsLarge","translationText","substring","popupContent","additionalCss","isCurentVote","localOnClick","as","labelPosition","localProps","subOptions","onEdit","push","component","Label","basic","belongsToUser","onDelete","onReport","isCopyTextMode","pointing","votes","on","List","Item","renderIcon","TranslationVotePresenter","submitTranslationDisabled","Placeholder","margin","Line","hasVoteOptions","voteOptions","showOwnSubmissionTextBox","inVisible","voteOpt","setTranslation","setTranslationValue","toggleShowSubmissionTextBox","Form","TextArea","original","marginBottom","_","toString","TranslationVoteContainer","fetchVotes","translationVotesResult","Success","translationGuid","translationApiCall","apiFunc","voteObj","transResult","preventDefault","badTrans","additionalText","reportObj","translationKey","offendingText","origText","additionalMessage","TranslationImages","fetchTranslationKeyImages","images","imagesResult","photoIndex","assistantAppsTranslationCdnUrl","imagePath","mainSrc","nextSrc","prevSrc","onCloseRequest","onMovePrevRequest","onMoveNextRequest","MainTranslationPanel","translationKeyStatus","Image","meta","TranslationPresenter","isNotLoggedIn","translationButtonsDisabled","selectedApps","selectedLanguage","showPagination","translationKeyIndex","paginationComp","overflowX","Pagination","totalPages","activePage","boundaryRange","siblingRange","ellipsisItem","firstItem","lastItem","prevItem","nextItem","onPageChange","pageData","banner","appDropDowns","appStatus","apps","setApps","langStatus","langDropDowns","setLanguage","fetchTranslationKeys","TranslationContainerUnconnected","fetchAppData","appsResult","fetchLanguageData","langResult","langDetails","onlyUntranslated","appGuidList","showOnlyUntranslated","transKeyResult","fetchTranslationKeySearchDropdowns","transKeySearchDropDownResult","language","actualPageNum","submissionStatus","Pending","isVisible","countryCode","ignoreLanguage","TranslationContainer","userGuidFromStorage","userGuidFromStorageResult","initTranslations","editTranslationItem","translationItemKey","translationItem","languageColourMap","TooltipWithFlag","borderRadius","payload","width","percentage","numTranslations","FlagAxisTick","x","y","outline","PureComponent","SteppedAxisTick","textAnchor","fill","AdminApprovalStatus","NumberOfTranslationsPerLanguageGraph","app","fetchGraphData","graphDataStatus","screenWidth","innerWidth","graphCols","graphData","newSearchObj","changeMode","isFlagMode","Array","tabPaneData","menuItem","Menu","compact","active","ResponsiveContainer","BarChart","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","interval","dataKey","tick","offset","YAxis","angle","Tooltip","Bar","entry","Cell","langCode","languageCode","StatisticsPresenter","raised","overflow","slot","UserGuideTile","Card","Meta","date","format","friendlyDate","dateCreated","Description","subTitle","tags","join","extra","onDeleteClick","CreateUserGuideTile","headerContent","bodyContent","BaseUserGuideTile","UserGuideStatus","statusFriendly","mapStateToProps","GuideSectionItemType","GuideListPage","history","useHistory","fetchStatus","setFetchStatus","guidePagination","setGuidePagination","fetchUserGuides","searchParams","page","guidesResult","renderPageContent","customStyles","marginRight","transform","BaseDialog","onRequestClose","closeModal","TagsFormInput","existingTags","setTags","AddTextSection","imgUrl","AddLinkSection","AddImageSection","AddMarkdownSection","BaseAddSection","wrapped","ui","guidBlock","Math","random","newGuid","MarkdownRenderer","markdown","LazyLoadImage","errorLoadingImage","imageNotFound","notFoundImageSrc","unused","effect","notFoundImageSource","imageSource","placeholderSrc","onError","SectionItem","renderContents","itemSpecificName","totalLength","saveItem","moveItem","moveDown","deleteItem","ActionButtons","additionalClassName","handleBlurEvent","persist","TextSectionItemContent","Group","Field","autoFocus","isNew","onBlur","LinkSectionItemContent","additionalContent","ImageSectionItemContent","MarkdownSectionItemContent","localMarkdown","setLocalMarkdown","paddingTop","CreateGuideSectionItems","addGuideObj","section","setAddGuideObj","editSectionItemDetails","sectionId","sectionItemId","selectedSectionIndex","sections","sec","selectedSection","selectedItemIndex","secItem","selectedItem","moveSectionItem","swapIndex","tempItems","tempItem","sortOrder","deleteSectionItem","sectionItems","orderedSectionItems","sort","a","b","sectionItem","renderSectionItems","CreateGuideSections","addSection","setSelectedSectionGuid","editSectionDetails","moveSection","deleteSection","orderedSections","si","heading","newHeading","editFunc","renderSections","CreateGuidePage","existingGuideId","useParams","isEditing","setAppStatus","setAppDropDowns","setLangStatus","setLangDropDowns","selectedSectionGuid","setSubmissionStatus","appGuid","minutes","showCreatedByUser","updatedGuideDetails","fetchExistingGuide","fetchGuide","setDetailProperty","prop","newSection","addSectionItem","newSectionItem","tableColumnNames","tableData","addResult","editResult","firstInvalidSection","find","s","submitDisabled","Input","label","NotFoundPresenter","App","isMenuOpen","setDarkMode","toggleMenu","exact","path","defaultConfig","googleAnalyticsEnabled","consoleLogDebug","useServiceWorker","applyIsDarkToBody","bodyTag","document","querySelector","classList","remove","initialCommonState","initialSettingState","initialTranslationState","reducer","combineReducers","action","Object","assign","removeItem","userDetailsDate","htmlTag","toggle","contains","i","isLocalhost","Boolean","hostname","match","register","navigator","URL","process","origin","addEventListener","swUrl","fetch","contentType","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","catch","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","persistedState","storedCommonReducer","storedSettingReducer","storedTranslationReducer","loadStateFromLocalStorage","store","createStore","subscribe","currentCommonReducer","getState","currentSettingReducer","currentTranslationReducer","saveStateToLocalStorage","callback","xhr","XMLHttpRequest","responseType","onload","send","getJSON","appId","setAppElement","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.fa79258d.chunk.js","sourcesContent":["export const DARKMODE = '@@common/DarkMode';\nexport const TOGGLEMENU = '@@common/ToggleMenu';","import State from \"../../state\";\n\nexport const getIsDark = (state: State): boolean => state?.settingReducer?.isDark != null ? state.settingReducer.isDark : true;\nexport const getMenuVisibility = (state: State): boolean => state?.settingReducer?.menuIsVisible || false;","import moment from 'moment';\n\nexport const friendlyDate = (date: Date = new Date()) =>\n    moment(date).format('yyy-MM-DD HH:mm');\n\nexport const getExpiryDateUtc = (timeTillExpiry: number) =>\n    moment().add(timeTillExpiry, 'seconds').utc().toDate();\n\nexport const isInTheFuture = (orig: Date): boolean => {\n    // console.log({ orig });\n    // console.log(moment(orig).toDate());\n    // console.log(moment().toDate());\n    // console.log(moment(orig).isAfter(moment()));\n    // console.log('---');\n    return moment(orig).isAfter(moment());\n}\n\nexport const isInThePast = (orig: Date): boolean => {\n    return moment(orig).isBefore(moment());\n}\n\nexport const oneHourFromNow = (): Date =>\n    moment().add(1, 'hour').toDate();","import { isInThePast } from \"../../../helper/dateHelper\";\nimport State from \"../../state\";\n\nexport const getIsLoading = (state: State): boolean =>\n    state?.commonReducer?.isLoading || false;\n\nexport const getUserGuid = (state: State): string => {\n    if (getIsExpiredUserDetailsDate(state)) return '';\n    const value = state?.commonReducer?.userGuid || '';\n    return value;\n}\n\nexport const getUserProfileUrl = (state: State): string => {\n    if (getIsExpiredUserDetailsDate(state)) return '';\n    const value = state?.commonReducer?.userProfileUrl || '';\n    return value;\n}\n\nexport const getUserName = (state: State): string => {\n    if (getIsExpiredUserDetailsDate(state)) return '';\n    const value = state?.commonReducer?.userName || '';\n    return value;\n}\n\nexport const getIsExpiredUserDetailsDate = (state: State): boolean => {\n    const value = state?.commonReducer?.userDetailsExpiryDate;\n    if (value == null) return true;\n    if (isInThePast(value)) return true;\n\n    return false;\n}","export class ExternalUrls {\n    static assistantApps = \"https://assistantapps.com\";\n    static assistantAppsApi = \"https://api.assistantapps.com\";\n    static kurtlourensEmail = \"mailto:hi@kurtlourens.com\";\n    static kurtlourens = \"https://kurtlourens.com\";\n    static patreon = \"https://www.patreon.com/AssistantApps\";\n    static kurtlourensFacebook = \"https://kurtlourens.com\";\n    static kurtlourensTwitter = \"https://kurtlourens.com\";\n    static kurtlourensLinkedIn = \"https://kurtlourens.com\";\n}","import React from 'react';\n\nimport packageJson from '../../../../package.json';\nimport { ExternalUrls } from '../../../constants/externalUrls';\n\nexport const Footer = () => {\n    return (\n        <footer className=\"footer-area\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-lg-4 col-sm-6 mb-4 mb-xl-0 single-footer-widget\">\n                        <h4>About Us</h4>\n                        <p>AssistantApps creates beautiful and fast cross-platform apps built to help you in your favourite games!</p>\n                    </div>\n\n                    <div className=\"col-lg-4 col-sm-6 mb-4 mb-xl-0 single-footer-widget\">\n                        <h4>Important Links</h4>\n                        <ul>\n                            <li><a href={ExternalUrls.assistantApps} target=\"_blank\" rel=\"noopener noreferrer\">Main website</a></li>\n                            <li><a href={ExternalUrls.assistantAppsApi} target=\"_blank\" rel=\"noopener noreferrer\">API Docmunetation</a></li>\n                            <li><a href={ExternalUrls.kurtlourensEmail} target=\"_blank\" rel=\"noopener noreferrer\">Contact Email</a></li>\n                        </ul>\n                    </div>\n\n                    <div className=\"col-lg-4 col-md-8 mb-4 mb-xl-0 single-footer-widget\">\n                        <h4>News</h4>\n                        <p>Join the <a href={ExternalUrls.patreon} target=\"_blank\" rel=\"noopener noreferrer\">Patreon page</a> to get early access and a behind-the-scenes look at we are building.</p>\n                    </div>\n\n                    <div className=\"col-lg-4 col-sm-6 mb-4 mb-xl-0 single-footer-widget\">\n                        <div className=\"footer-logo\">\n                            <img src=\"/assets/img/logo-sm.png\" alt=\"\" />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"footer-bottom row align-items-center text-center text-lg-left no-gutters\">\n                    <p className=\"footer-text m-0 col-lg-8 col-md-12\">\n                        Copyright &copy;{new Date().getFullYear()} All rights reserved | <a href={ExternalUrls.kurtlourens} target=\"_blank\" rel=\"noopener noreferrer\">Kurt Lourens</a> | {packageJson.version}\n                    </p>\n                    <div className=\"col-lg-4 col-md-12 text-center text-lg-right footer-social\">\n                        <a href={ExternalUrls.kurtlourensFacebook} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"ti-facebook\"></i></a>\n                        <a href={ExternalUrls.kurtlourensTwitter} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"ti-twitter-alt\"></i></a>\n                        <a href={ExternalUrls.kurtlourens} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"ti-html5\"></i></a>\n                        <a href={ExternalUrls.kurtlourensLinkedIn} target=\"_blank\" rel=\"noopener noreferrer\"><i className=\"ti-linkedin\"></i></a>\n                    </div>\n                </div>\n            </div>\n        </footer>\n    );\n}","/* Auto Generated */\n\nexport enum OAuthProviderType {\n    unknown,\n    google,\n}\n","import Swal from 'sweetalert2';\n\nimport { ResultWithValue } from '../contracts/results/ResultWithValue';\n\nexport const getQuantityDialog = async (title: string, defaultValue?: number): Promise<ResultWithValue<number>> => {\n    const { value: quantity } = await Swal.fire({\n        title,\n        input: 'number',\n        inputValue: (defaultValue != null) ? defaultValue.toString() : '1',\n        showCancelButton: true\n    });\n    if (isNaN((quantity as any))) return {\n        isSuccess: false,\n        errorMessage: 'NaN',\n        value: 0,\n    };\n\n    return {\n        isSuccess: true,\n        errorMessage: '',\n        value: (quantity as any),\n    };\n}\n\nexport const getStringDialog = async (title: string, currentValue: string, placeholder?: string): Promise<string> => {\n    const { value: text } = await Swal.fire({\n        title,\n        input: 'text',\n        inputValue: currentValue,\n        inputPlaceholder: placeholder,\n        showCancelButton: true\n    });\n\n    return (text as any);\n}\n\nexport const successDialog = async (title: string, message: string) => {\n    Swal.fire({\n        title,\n        icon: 'success',\n        text: message,\n    });\n}\n\nexport const errorDialog = async (title: string, message: string) => {\n    Swal.fire({\n        title,\n        icon: 'error',\n        text: message,\n    });\n}\n","export const anyObject: any = {};\n","export const app = 'app';\nexport const language = 'language';\nexport const translation = 'translation';\nexport const translationKeySearch = 'translationKey/Search';\nexport const translationKeySearchDropdown = 'translationKey/SearchDropdown';\nexport const translationKeyImages = 'translationImage';\nexport const translationVotes = 'translationvote';\nexport const translationReports = 'translationReport';\nexport const translationsPerLangGraph = 'translation/Graph/TranslationsPerLanguage';\nexport const translatorLeaderboard = 'translationStats/TranslatorLeaderboard';\nexport const authUrl = 'Account/Login';\n\nexport const guideParam = {\n    getGuideById: ':guid',\n    editGuide: ':guid',\n    deleteGuide: ':guid',\n}\nexport const guide = {\n    getForCurrentUser: 'GuideDetail/User',\n    getGuideById: `GuideContent/${guideParam.getGuideById}`,\n    submitGuide: 'GuideDetail',\n    editGuide: `GuideDetail/${guideParam.editGuide}`,\n    deleteGuide: `GuideContent/${guideParam.deleteGuide}`,\n}\n","import { ResultWithValue } from '../contracts/results/ResultWithValue';\nimport { StorageItem } from '../contracts/storageItem';\nimport { isInTheFuture, oneHourFromNow } from '../helper/dateHelper';\nimport { anyObject } from '../helper/typescriptHacks';\n\nexport class StorageService {\n    public get<T>(key: string): ResultWithValue<T> {\n        const itemString = localStorage.getItem(key) || '{}';\n        const item: StorageItem<T> = JSON.parse(itemString);\n\n        if (item != null && item.data != null && item.expiryDate != null) {\n            if (isInTheFuture(item.expiryDate)) {\n                return {\n                    isSuccess: true,\n                    value: item.data,\n                    errorMessage: '',\n                }\n            }\n        }\n\n        return {\n            isSuccess: false,\n            value: anyObject,\n            errorMessage: 'could not load item from strage',\n        }\n    }\n\n    public set<T>(key: string, data: T, expiry?: Date): void {\n        const oneHourFromNw = oneHourFromNow();\n\n        const item: StorageItem<T> = {\n            data: data,\n            expiryDate: expiry || oneHourFromNw\n        };\n\n        localStorage.setItem(key, JSON.stringify(item));\n    }\n}\n","import * as apiEndpoints from '../../constants/apiEndpoints';\nimport * as storageType from '../../constants/storageType';\nimport { AppViewModel } from '../../contracts/generated/ViewModel/appViewModel';\nimport { getExpiryDateUtc } from '../../helper/dateHelper';\nimport { GuideSearchResultViewModel } from '../../contracts/generated/ViewModel/Guide/guideSearchResultViewModel';\nimport { GuideSearchViewModel } from '../../contracts/generated/ViewModel/Guide/guideSearchViewModel';\nimport { LanguageViewModel } from '../../contracts/generated/ViewModel/languageViewModel';\nimport { OAuthUserViewModel } from '../../contracts/generated/ViewModel/oAuthUserViewModel';\nimport { TranslationGetGraphViewModel } from '../../contracts/generated/ViewModel/Translation/translationGetGraphViewModel';\nimport { TranslationImageViewModel } from '../../contracts/generated/ViewModel/Translation/translationImageViewModel';\nimport { TranslationKeySearchDropdownViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeySearchDropdownViewModel';\nimport { TranslationKeyViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeyViewModel';\nimport { TranslationSearchViewModel } from '../../contracts/generated/ViewModel/Translation/translationSearchViewModel';\nimport { TranslationsPerLanguageGraphViewModel } from '../../contracts/generated/ViewModel/Translation/translationsPerLanguageGraphViewModel';\nimport { TranslationSubmissionViewModel } from '../../contracts/generated/ViewModel/Translation/translationSubmissionViewModel';\nimport { TranslationSubmissionWithVotesViewModel } from '../../contracts/generated/ViewModel/Translation/translationSubmissionWithVotesViewModel';\nimport { TranslationVoteViewModel } from '../../contracts/generated/ViewModel/Translation/translationVoteViewModel';\nimport { ILoginProps } from '../../contracts/login';\nimport { PaginationWithValue } from '../../contracts/pagination/paginationWithValue';\nimport { Result, ResultWithValue } from '../../contracts/results/ResultWithValue';\nimport { BaseApiService } from './../BaseApiService';\nimport { StorageService } from './../StorageService';\nimport { AddOrEditGuideViewModel } from '../../contracts/generated/ViewModel/Guide/addOrEditGuideViewModel';\nimport { GuideContentViewModel } from '../../contracts/generated/ViewModel/Guide/guideContentViewModel';\nimport { TranslatorLeaderboardItemViewModel } from '../../contracts/generated/ViewModel/Translation/translatorLeaderboardItemViewModel';\nimport { TranslationReportAddViewModel } from '../../contracts/generated/ViewModel/Translation/translationReportAddViewModel';\n\nexport class AssistantAppsApiService extends BaseApiService {\n    // Base\n    getApps = (): Promise<ResultWithValue<Array<AppViewModel>>> =>\n        this.get<Array<AppViewModel>>(apiEndpoints.app);\n    getLanguages = (): Promise<ResultWithValue<Array<LanguageViewModel>>> =>\n        this.get<Array<LanguageViewModel>>(apiEndpoints.language);\n\n    // Translations\n    getTranslationKeys = (searchObj: TranslationSearchViewModel): Promise<ResultWithValue<Array<TranslationKeyViewModel>>> =>\n        this.post<Array<TranslationKeyViewModel>>(apiEndpoints.translationKeySearch, searchObj);\n\n    getTranslationKeysSearchDropdown = (searchObj: TranslationSearchViewModel): Promise<ResultWithValue<Array<TranslationKeySearchDropdownViewModel>>> =>\n        this.post<Array<TranslationKeySearchDropdownViewModel>>(apiEndpoints.translationKeySearchDropdown, searchObj);\n\n    getTranslationImages = (translationKeyGuid: string): Promise<ResultWithValue<Array<TranslationImageViewModel>>> =>\n        this.get<Array<TranslationImageViewModel>>(`${apiEndpoints.translationKeyImages}/${translationKeyGuid}`);\n\n    getTranslationVotes = (translationKeyGuid: string): Promise<ResultWithValue<Array<TranslationVoteViewModel>>> =>\n        this.get<Array<TranslationVoteViewModel>>(`${apiEndpoints.translationVotes}/${translationKeyGuid}`);\n\n    getSubmittedTranslations = (translationKeyGuid: string, languageGuid: string): Promise<ResultWithValue<Array<TranslationSubmissionWithVotesViewModel>>> =>\n        this.get<Array<TranslationSubmissionWithVotesViewModel>>(`${apiEndpoints.translation}/${translationKeyGuid}/${languageGuid}`);\n\n    submitTranslation = (data: TranslationSubmissionViewModel): Promise<Result> =>\n        this.post(apiEndpoints.translation, data);\n\n    deleteTranslation = (guid: string): Promise<Result> =>\n        this.delete(`${apiEndpoints.translation}/${guid}`);\n\n    selectTranslationVote = (data: TranslationVoteViewModel): Promise<Result> =>\n        this.post(apiEndpoints.translationVotes, data);\n\n    reportTranslation = (data: TranslationReportAddViewModel): Promise<Result> =>\n        this.post(apiEndpoints.translationReports, data);\n\n    getTranslationsPerLangGraphData = (data: TranslationGetGraphViewModel): Promise<ResultWithValue<Array<TranslationsPerLanguageGraphViewModel>>> =>\n        this.post(apiEndpoints.translationsPerLangGraph, data);\n\n    getTranslators = (data: any): Promise<ResultWithValue<Array<TranslatorLeaderboardItemViewModel>>> =>\n        this.post(apiEndpoints.translatorLeaderboard, data);\n\n\n    // Guides\n    getGuidesForUser = (search: GuideSearchViewModel): Promise<ResultWithValue<PaginationWithValue<Array<GuideSearchResultViewModel>>>> =>\n        this.post(apiEndpoints.guide.getForCurrentUser, search);\n    getGuidesById = (id: string): Promise<ResultWithValue<GuideContentViewModel>> =>\n        this.get(apiEndpoints.guide.getGuideById.replace(apiEndpoints.guideParam.getGuideById, id));\n    submitGuide = (newGuide: AddOrEditGuideViewModel): Promise<Result> =>\n        this.post(apiEndpoints.guide.submitGuide, newGuide);\n    editGuide = (guid: string, edittedGuide: AddOrEditGuideViewModel): Promise<Result> =>\n        this.post(apiEndpoints.guide.editGuide.replace(apiEndpoints.guideParam.editGuide, guid), edittedGuide);\n    deleteGuide = (guid: string): Promise<Result> =>\n        this.delete(apiEndpoints.guide.deleteGuide.replace(apiEndpoints.guideParam.deleteGuide, guid));\n\n\n    // Auth\n    async loginWithOAuth(oAuthObj: OAuthUserViewModel): Promise<ResultWithValue<ILoginProps>> {\n        let userGuid = '';\n        let timeTillExpiry = 0;\n        let expiryDate = new Date();\n        const apiResult = await this.post(apiEndpoints.authUrl, oAuthObj, (headers) => {\n            const token = headers.token;\n            timeTillExpiry = headers.tokenexpiry;\n            userGuid = headers.userguid;\n\n            this.setInterceptors(token);\n            expiryDate = getExpiryDateUtc(timeTillExpiry);\n\n            const storageServ = new StorageService();\n            storageServ.set(storageType.token, token, expiryDate);\n            storageServ.set(storageType.userGuid, userGuid, expiryDate);\n            storageServ.set(storageType.userName, oAuthObj.username, expiryDate);\n        });\n\n        const loginData: ILoginProps = {\n            userGuid: userGuid,\n            userName: oAuthObj.username,\n            secondsTillExpire: timeTillExpiry,\n            userProfileUrl: oAuthObj.profileUrl,\n            userDetailsExpiryDate: expiryDate,\n        };\n\n        return {\n            isSuccess: apiResult.isSuccess,\n            value: loginData,\n            errorMessage: apiResult.errorMessage,\n        };\n    }\n}\n","export const token = 'token';\nexport const tokenExpiry = 'tokenExpiry';\nexport const userGuid = 'userGuid';\nexport const userName = 'userName';","import axios from 'axios';\nimport * as storageType from '../constants/storageType';\nimport { Result, ResultWithValue } from '../contracts/results/ResultWithValue';\nimport { anyObject } from '../helper/typescriptHacks';\nimport { StorageService } from './StorageService';\n\n\ndeclare global {\n  interface Window { config: any }\n}\n\nexport class BaseApiService {\n  private _baseUrl: String = window.config.apiUrl;\n\n  constructor(newBaseUrl?: String) {\n    if (newBaseUrl != null) this._baseUrl = newBaseUrl;\n\n    try {\n      const storageServ = new StorageService();\n      const tokenFromStorage = storageServ.get<string>(storageType.token);\n      if (tokenFromStorage.isSuccess) this.setInterceptors(tokenFromStorage.value);\n    } catch (ex) { }\n  }\n\n  setInterceptors = (token: string) => {\n    axios.defaults.headers.common['Authorization'] = 'Bearer ' + token;\n  };\n\n  protected async get<T>(url: string): Promise<ResultWithValue<T>> {\n    try {\n      const result = await axios.get<T>(`${this._baseUrl}/${url}`);\n      return {\n        isSuccess: true,\n        value: result.data,\n        errorMessage: ''\n      }\n    } catch (ex) {\n      return {\n        isSuccess: false,\n        value: anyObject,\n        errorMessage: (ex as any).message\n      }\n    }\n  }\n\n  protected async post<T>(url: string, data: any, manipulateHeaders?: (headers: any) => void): Promise<ResultWithValue<T>> {\n    try {\n      const result = await axios.post<T>(`${this._baseUrl}/${url}`, data);\n      if (manipulateHeaders != null) manipulateHeaders(result.headers);\n      return {\n        isSuccess: true,\n        // statusCode: result.status,\n        value: result.data,\n        errorMessage: ''\n      }\n    } catch (ex) {\n      return {\n        isSuccess: false,\n        value: anyObject,\n        statusCode: (ex as any).response?.status,\n        errorMessage: (ex as any).message\n      }\n    }\n  }\n\n  protected async delete(url: string, manipulateHeaders?: (headers: any) => void): Promise<Result> {\n    try {\n      const result = await axios.delete(`${this._baseUrl}/${url}`);\n      if (manipulateHeaders != null) manipulateHeaders(result.headers);\n      return {\n        isSuccess: true,\n        errorMessage: ''\n      }\n    } catch (ex) {\n      return {\n        isSuccess: false,\n        errorMessage: (ex as any).message\n      }\n    }\n  }\n}\n","import { ToastOptions } from \"react-toastify\";\n\nexport const defaultToastProps: ToastOptions = {\n    position: 'bottom-right',\n    autoClose: 5000,\n    rtl: false,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnFocusLoss: false,\n    draggable: true,\n    pauseOnHover: true,\n};\n","import { ReactNode } from 'react';\nimport { toast, ToastOptions } from 'react-toastify';\nimport { defaultToastProps } from '../../constants/ToastOptions';\n\nexport class ToastService {\n\n    success = (message: string | ReactNode, displayProps?: ToastOptions): void => {\n        toast.success(message, { ...defaultToastProps, ...displayProps });\n    }\n\n    error = (message: string | ReactNode, displayProps?: ToastOptions): void => {\n        toast.error(message, { ...defaultToastProps, ...displayProps });\n    }\n}\n","import React, { ReactNode } from 'react';\nimport { anyObject } from '../helper/typescriptHacks';\n\nimport { AssistantAppsApiService } from '../services/api/AssistantAppsApiService';\nimport { ToastService } from '../services/common/ToastService';\n\nexport interface IDependencyInjection {\n\n  //api\n  assistantAppsApiService: AssistantAppsApiService;\n\n  // common\n  toastService: ToastService,\n}\n\nexport const defaultDependencyInjectionFunc = () => {\n  return {\n    //api\n    assistantAppsApiService: new AssistantAppsApiService(),\n\n    // common\n    toastService: new ToastService(),\n  };\n};\n\nexport const DependencyInjectionContext = React.createContext<IDependencyInjection>(\n  anyObject\n);\ninterface IDependencyInjectionProviderProps {\n  children: ReactNode;\n}\nexport const DependencyInjectionProvider: React.FC<IDependencyInjectionProviderProps> = (\n  props: IDependencyInjectionProviderProps\n) => {\n  const { children } = props;\n  return (\n    <DependencyInjectionContext.Provider\n      value={defaultDependencyInjectionFunc()}\n    >\n      {children}\n    </DependencyInjectionContext.Provider>\n  );\n};\n\nexport function withDependencyInjectionProvider<TProps>(\n  WrappedComponent: any\n): React.FC<TProps> {\n  return (props: TProps) => (\n    <DependencyInjectionContext.Provider\n      value={defaultDependencyInjectionFunc()}\n    >\n      <WrappedComponent {...props} />\n    </DependencyInjectionContext.Provider>\n  );\n}\nexport function withDependencyInjectionConsumer<\n  WithoutExpectedDependencyInjectionType,\n  ExpectedDependencyInjectionType\n>(\n  WrappedComponent: any,\n  mapper: (\n    DependencyInjection: IDependencyInjection\n  ) => ExpectedDependencyInjectionType\n) {\n  const wrapper: React.FC<WithoutExpectedDependencyInjectionType> = (\n    props: WithoutExpectedDependencyInjectionType\n  ) => {\n    return (\n      <DependencyInjectionContext.Consumer>\n        {(DependencyInjection: IDependencyInjection) => (\n          <WrappedComponent {...mapper(DependencyInjection)} {...props} />\n        )}\n      </DependencyInjectionContext.Consumer>\n    );\n  };\n  return wrapper;\n}\n\nexport function withServices<WithoutExpectedServicesType, ExpectedServicesType>(WrappedComponent: any, mapper: (services: IDependencyInjection) => ExpectedServicesType) {\n  const wrapper: React.FC<WithoutExpectedServicesType> = (props: WithoutExpectedServicesType) => {\n    return (\n      <DependencyInjectionContext.Consumer>\n        {\n          (services: IDependencyInjection) =>\n            <WrappedComponent {...(mapper(services))} {...props} />\n        }\n      </DependencyInjectionContext.Consumer>\n    );\n  }\n  return wrapper;\n}","import React from 'react';\nimport { Popup } from 'semantic-ui-react';\n\ninterface IProps {\n    message: string;\n    showToolTip: boolean;\n    children: React.ReactNode\n}\n\nexport const ConditionalToolTip: React.FC<IProps> = (props: IProps) => {\n    if (!props.showToolTip) return <>{props.children}</>;\n    return (\n        <Popup wide\n            content={props.message}\n            trigger={props.children}\n        />\n    );\n};\n","export const LOADING = '@@common/Loading';\nexport const LOGIN = '@@common/Login';\nexport const LOGOUT = '@@common/Logout';","import * as type from \"./type\";\nimport { ILoginProps } from '../../../contracts/login';\n\nexport const setLoadingStatus = (isLoading: boolean, text?: string) => {\n    return {\n        isLoading,\n        text: text || 'Loading',\n        type: type.LOADING,\n    }\n}\n\n\nexport const login = (login: ILoginProps) => {\n    return {\n        ...login,\n        type: type.LOGIN,\n    }\n}\n\nexport const logout = () => {\n    return {\n        type: type.LOGOUT,\n    }\n}","import React, { useContext, useState } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { connect } from 'react-redux';\nimport { GoogleLoginButton } from \"react-social-login-buttons\";\nimport { Icon, Modal } from 'semantic-ui-react';\nimport Swal from 'sweetalert2';\nimport { OAuthProviderType } from '../../contracts/generated/Enum/oAuthProviderType';\nimport { OAuthUserViewModel } from '../../contracts/generated/ViewModel/oAuthUserViewModel';\nimport { ILoginProps } from '../../contracts/login';\nimport { errorDialog } from '../../helper/dialogHelper';\nimport { DependencyInjectionContext } from '../../integration/dependencyInjection';\nimport { ConditionalToolTip } from '../common/conditionalTooltip';\nimport { mapDispatchToProps, mapStateToProps } from './loginDialog.redux';\n\ninterface IProps {\n    isLoading?: boolean;\n    children?: React.ReactNode;\n    iconStyle?: any;\n    colour?: \"grey\" | \"red\" | \"orange\" | \"yellow\" | \"olive\" | \"green\" | \"teal\" | \"blue\" | \"violet\" | \"purple\" | \"pink\" | \"brown\" | \"black\";\n\n    userGuid?: string;\n    userProfileUrl?: string;\n    userName?: string;\n    showDialog?: boolean;\n\n    setLoadingStatus?: (isLoading: boolean) => void;\n    login?: (loginData: ILoginProps) => void;\n    logout?: () => void;\n}\n\n\nexport const LoginDialogUnconnected: React.FC<IProps> = (props: IProps) => {\n    const services = useContext(DependencyInjectionContext);\n    const [isModalOpen, setModalOpen] = useState<boolean>(false);\n\n    const responseGoogle = (type: OAuthProviderType) => async (response: any) => {\n        if (response == null ||\n            response.tokenId == null ||\n            response.profileObj == null ||\n            response.accessToken == null ||\n            response.profileObj.email == null ||\n            response.profileObj.imageUrl == null ||\n            response.profileObj.name == null) {\n            oAuthLoginFailure({ custom: 'manual failure, response did not have expected values' });\n            return;\n        }\n        setModalOpen(!isModalOpen);\n        const apiObj: OAuthUserViewModel = {\n            accessToken: response.accessToken,\n            tokenId: response.tokenId,\n            email: response.profileObj.email,\n            oAuthType: type,\n            profileUrl: response.profileObj.imageUrl,\n            username: response.profileObj.name,\n        }\n\n        const loginResult = await services.assistantAppsApiService.loginWithOAuth(apiObj);\n        if (loginResult.isSuccess && props.login) {\n            props.login(loginResult.value);\n        } else {\n            console.error(loginResult.errorMessage);\n            errorDialog('Login failed', 'Unable to log in, please try again');\n            setLoadingStatus(false);\n        }\n    }\n\n    const setLoadingStatus = (isLoading: boolean) => {\n        if (props.setLoadingStatus) props.setLoadingStatus(isLoading);\n    }\n\n    const oAuthLoginFailure = (error: any) => {\n        console.warn(error);\n        setLoadingStatus(false);\n        setModalOpen(false);\n        Swal.fire({\n            title: 'Login error!',\n            text: `Something went wrong and we could not log you in. ${error.details}`,\n            icon: 'error',\n        });\n    }\n\n    const oAuthLogout = () => {\n        Swal.fire({\n            title: 'Logout?',\n            text: 'Are you sure that you want to logout?',\n            icon: 'question',\n            allowEnterKey: true,\n            allowEscapeKey: true,\n            showCancelButton: true,\n        }).then((answer: any) => {\n            if (answer.isConfirmed) {\n                if (props.logout) props.logout();\n            }\n        });\n    }\n\n    const toggleModalOpen = () => setModalOpen(!isModalOpen);\n\n    const LoginComponent = (props.userGuid != null && props.userGuid.length > 5)\n        ? (\n            <span className=\"nav-link pointer\" onClick={oAuthLogout}>\n                <ConditionalToolTip\n                    message={props.userName || ''}\n                    showToolTip={props.userName != null && props.userName.length > 1}>\n                    <img className=\"oauth-circle\" src={props.userProfileUrl} alt={props.userName} />\n                </ConditionalToolTip>\n            </span>\n        )\n        : (\n            <span className=\"nav-link pointer\"\n                onClick={toggleModalOpen}>\n                <Icon\n                    inverted\n                    name=\"user\"\n                    color={props.colour || \"grey\"}\n                    size=\"large\"\n                    className=\"pointer\"\n                    style={props.iconStyle || {}}\n                />Login</span>\n        );\n\n    const googleLoginButton = (\n        <GoogleLogin\n            clientId={window.config.googleClientId}\n            render={renderProps => (\n                <GoogleLoginButton onClick={() => {\n                    setLoadingStatus(true);\n                    renderProps.onClick();\n                }}\n                    style={{ opacity: renderProps.disabled ? '50%' : null, maxWidth: '50%' }}\n                />\n            )}\n            style={{\n                backgroundColor: 'red',\n            }}\n            buttonText=\"Login\"\n            onSuccess={responseGoogle(OAuthProviderType.google)}\n            onFailure={oAuthLoginFailure}\n            cookiePolicy={'single_host_origin'}\n        />\n    );\n\n    if (props.showDialog === false) {\n        return googleLoginButton;\n    }\n\n    return (\n        <>\n            {\n                props.children != null\n                    ? <div className=\"pointer\" onClick={toggleModalOpen}>\n                        {props.children}\n                    </div>\n                    : LoginComponent\n            }\n\n            <Modal\n                size=\"tiny\"\n                dimmer=\"blurring\"\n                open={isModalOpen}\n                onClose={toggleModalOpen}\n            >\n                <Modal.Header>AssistantApps Login</Modal.Header>\n                <Modal.Content>{googleLoginButton}</Modal.Content>\n            </Modal>\n        </>\n    );\n}\n\nexport const LoginDialog = connect(mapStateToProps, mapDispatchToProps)(LoginDialogUnconnected);\n","import { State } from '../../redux/state';\n\nimport { getIsLoading, getUserGuid, getUserName, getUserProfileUrl } from '../../redux/modules/common/selector';\nimport { login, logout, setLoadingStatus } from '../../redux/modules/common/action';\nimport { ILoginProps } from '../../contracts/login';\n\nexport const mapStateToProps = (state: State) => {\n    return {\n        isLoading: getIsLoading(state),\n        userGuid: getUserGuid(state),\n        userProfileUrl: getUserProfileUrl(state),\n        userName: getUserName(state),\n    };\n};\n\nexport const mapDispatchToProps = (dispatch: any) => {\n\n    let newProps: any = {};\n    newProps.setLoadingStatus = (isLoading: boolean) => {\n        dispatch(setLoadingStatus(isLoading));\n    };\n    newProps.login = (loginData: ILoginProps) => {\n        dispatch(login(loginData));\n    };\n    newProps.logout = () => {\n        dispatch(logout());\n    };\n    return { ...newProps };\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { LoginDialog } from '../../dialog/loginDialog';\n\nimport './header.scss';\nimport { Icon } from 'semantic-ui-react';\n\ninterface IState {\n\tisOpen: boolean;\n\tlinks: Array<any>;\n}\n\ninterface IProps { }\n\nexport class Header extends React.Component<IProps, IState> {\n\tconstructor(props: IProps) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisOpen: false,\n\t\t\tlinks: [\n\t\t\t\t{ route: '/', iconName: 'home', text: 'Home' },\n\t\t\t\t{ route: '/translation', iconName: 'conversation', text: 'Translate' },\n\t\t\t\t{ route: '/stats', iconName: 'line graph', text: 'Stats' },\n\t\t\t\t// { route: '/stats', iconName: 'wpforms', text: 'Contact' },\n\t\t\t]\n\t\t};\n\t}\n\n\ttoggleOpen = () => {\n\t\tthis.setState((prevState: IState) => {\n\t\t\treturn {\n\t\t\t\tisOpen: !prevState.isOpen,\n\t\t\t}\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<header className=\"header_area navbar_fixed\">\n\t\t\t\t<div className=\"main_menu\">\n\t\t\t\t\t<nav className=\"navbar navbar-expand-lg navbar-light noselect\">\n\t\t\t\t\t\t<div className=\"container\">\n\t\t\t\t\t\t\t<a className=\"navbar-brand logo_h\" href=\"/\">\n\t\t\t\t\t\t\t\t<img src=\"/assets/img/logo-sm.png\" alt=\"logo\" style={{ height: '100%' }} />\n\t\t\t\t\t\t\t\t<h2 className=\"heading col-md-0\" style={{ display: 'inline', paddingLeft: '1em' }}>AssistantApp Tools</h2>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t\t<button className=\"navbar-toggler\"\n\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\taria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\"\n\t\t\t\t\t\t\t\tdata-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n\t\t\t\t\t\t\t\tonClick={this.toggleOpen}>\n\t\t\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t\t\t<span className=\"icon-bar\"></span>\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t\t<div className={classNames('collapse navbar-collapse offset', { 'show': this.state.isOpen })}\n\t\t\t\t\t\t\t\tid=\"navbarSupportedContent\" >\n\t\t\t\t\t\t\t\t<ul className=\"nav navbar-nav menu_nav ml-auto\">\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tthis.state.links.map((item: any) => {\n\t\t\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t\t\t<li key={`${item.text}-${item.route}`} className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Link className=\"nav-link\" to={item.route} onClick={this.toggleOpen}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Icon\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tinverted\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={item.iconName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tcolor={\"grey\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"pointer\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t{item.text}\n\t\t\t\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t<li className=\"nav-item\">\n\t\t\t\t\t\t\t\t\t\t<LoginDialog />\n\t\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</nav>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t);\n\t}\n}","import * as React from \"react\";\nimport { withRouter } from \"react-router-dom\";\n\ninterface IProps {\n    location: any;\n}\n\nclass ScrollToTopWithoutRoute extends React.Component<IProps> {\n    componentDidUpdate(prevProps: IProps) {\n        if (this.props.location !== prevProps.location) {\n            window.scrollTo(0, 0)\n        }\n    }\n\n    render() {\n        return this.props.children\n    }\n}\n\nexport const ScrollToTop = withRouter((props: IProps) => <ScrollToTopWithoutRoute {...props} />)","export const home = '/';\n// export const about = '/about';\n// export const setting = '/setting';\nexport const translation = '/translation';\nexport const translationAlt = '/translate';\nexport const guides = '/guides';\nexport const createGuide = '/guide-create';\nexport const editGuideParam = ':id';\nexport const editGuide = `/guide-edit/${editGuideParam}`;\nexport const stats = '/stats';","import React from 'react';\n\ninterface IProps {\n}\n\nexport const ScreenshotFrame = (props: IProps) => {\n    return (\n        <img\n            src=\"/assets/img/screenshots/phone.png\"\n            className=\"screenshotSliderFrame\"\n            alt=\"screenshot frame\"\n        />\n    );\n};","import React from 'react';\nimport classNames from 'classnames';\n\ninterface IProps {\n    imageName: string;\n    className?: string;\n}\n\nexport const ScreenshotImage = (props: IProps) => {\n    const imageBaseUrl = \"/assets/img/screenshots/{0}.png\";\n    const imageUrl = imageBaseUrl.replace('{0}', props.imageName);\n    const imageAlt = 'Screenshot' + props.imageName;\n    return (\n        <img\n            src={imageUrl}\n            className={classNames('screenshotSliderFrame', props.className || '')}\n            alt={imageAlt}\n        />\n    );\n};","export const wait = (ms: number): Promise<any> => {\n    return new Promise(resolve => {\n        setTimeout(resolve, ms);\n    });\n}","export const getAppNameFromImage = (currentImage: string): string => {\n    if (currentImage.includes('NMS')) {\n        return 'Assistant for No Man\\'s Sky';\n    }\n    if (currentImage.includes('SMS')) {\n        return 'Assistant for Scrap Mechanic';\n    }\n    return 'Assistant for No Man\\'s Sky';\n}","import React, { useEffect, useState } from 'react';\nimport { Popup } from 'semantic-ui-react';\nimport { ScreenshotFrame } from './screenshotFrame';\nimport { ScreenshotImage } from './screenshotImage';\nimport { wait } from '../../helper/timeoutHelper';\nimport { getAppNameFromImage } from '../../helper/nameHelper';\n\ninterface IProps {\n    secondsPerImage?: number\n}\n\nexport const ScreenshotSlider: React.FC<IProps> = (props: IProps) => {\n    const screenShotList = [\n        'NMS0',\n        'NMS1',\n        'NMS2',\n        'NMS3',\n        'NMS4',\n        'NMS5',\n        'SMS0',\n        'SMS1',\n        'SMS2',\n        'SMS3',\n    ];\n\n    const [index, setIndex] = useState<number>(0);\n    const [oldIndex, setOldIndex] = useState<number>(0);\n    const [indexIsNew, setIndexIsNew] = useState<boolean>(false);\n    const [appName, setAppName] = useState(getAppNameFromImage(screenShotList[0]));\n\n    useEffect(() => {\n        let intervalId: any = 0;\n\n        const secondsPerImage = props.secondsPerImage || 5;\n        intervalId = setInterval(() => rotateImage(), secondsPerImage * 1000);\n\n        return () => {\n            clearInterval(intervalId);\n        }\n        // eslint-disable-next-line\n    }, []);\n\n    const rotateImage = async () => {\n        setIndex(localIndex => {\n            const newIndex = ((localIndex + 1) >= screenShotList.length) ? 0 : localIndex + 1;\n\n            transitionImages(newIndex);\n            return newIndex;\n        });\n    }\n\n    const transitionImages = async (localIndex: number) => {\n        setIndexIsNew(true);\n\n        await wait(1000);\n        setIndexIsNew(false);\n\n        await wait(500);\n        setOldIndex(localIndex);\n        setAppName(getAppNameFromImage(screenShotList[localIndex]));\n    }\n\n    const preloadIndex = (((oldIndex + 1) >= screenShotList.length) ? 0 : oldIndex + 1);\n    const preloadImage = screenShotList[preloadIndex];\n    const oldImage = screenShotList[oldIndex];\n    const currentImage = screenShotList[index];\n    return (\n        <Popup\n            // basic={true}\n            flowing={true}\n            // header={<h4>Screenshot from</h4>}\n            // position=\"top center\"\n\n            // offset=\"200, 0\"\n            content={<span>\n                <strong>Screenshot from&nbsp;</strong>\n                {appName}\n            </span>\n            }\n            trigger={\n                <div className=\"screenshotSlider\">\n                    <div className=\"screenshotSliderContent\">\n                        <ScreenshotImage imageName={preloadImage} />\n                        <ScreenshotImage imageName={oldImage} />\n                        <ScreenshotImage imageName={currentImage} className={indexIsNew ? 'transparent' : ''} />\n                    </div>\n                    <ScreenshotFrame />\n                </div>\n            }\n        />\n    );\n};","export enum NetworkState {\n    Pending,\n    Loading,\n    Success,\n    Error,\n}","import React from 'react';\n\nimport './scrollDownIndicator.scss';\n\nexport const ScrollDownArrowsIndicator = () => {\n    return (\n        <div className=\"scroll-down-arrows col-md-0\">\n            <span></span>\n            <span></span>\n            <span></span>\n        </div>\n    );\n}\n\nexport const ScrollDownMouseIndicator = () => {\n    return (\n        <div className=\"scroll-down-mouse col-md-0\"></div>\n    );\n}","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ScreenshotSlider } from '../../screenshotSlider/screenshotSlider';\nimport { ScrollDownArrowsIndicator } from '../scroll/scrollDownIndicator';\nimport * as route from '../../../constants/route';\n\nimport './banner.scss';\n\nexport const Banner = () => {\n\treturn (\n\t\t<section className=\"home_banner_area\">\n\t\t\t<ScrollDownArrowsIndicator />\n\t\t\t<div className=\"banner_inner d-flex align-items-center\">\n\t\t\t\t<div className=\"overlay\"></div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"offset-xl-0 col-xl-5 col-lg-5 col-md-0\" style={{ position: 'relative' }}>\n\t\t\t\t\t\t\t<div className=\"screenshot-holder\">\n\t\t\t\t\t\t\t\t<ScreenshotSlider key=\"ScreenshotSlider\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className=\"col-xl-7 col-lg-7\">\n\t\t\t\t\t\t\t<div className=\"banner_content\">\n\t\t\t\t\t\t\t\t<h3>Help make your favourite apps better!</h3>\n\t\t\t\t\t\t\t\t<p style={{ fontSize: '1.5em' }}>Your feedback and help is appreciated! The Assistant Apps are only as good as they are now, thanks to the efforts of all the contributors, Patrons, donators and those who give feedback! <span role=\"img\" aria-label=\"smiley\">😁</span></p>\n\t\t\t\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t\t\t\t<div className=\"col-12 col-lg-6\">\n\t\t\t\t\t\t\t\t\t\t<Link className=\"banner_btn\" to={route.translation}>Help translate<i className=\"ti-arrow-right\"></i></Link>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t{/* <div className=\"col-12 col-lg-6\">\n\t\t\t\t\t\t\t\t\t\t<Link className=\"banner_btn\" to={route.translation}>Create a Guide<i className=\"ti-arrow-right\"></i></Link>\n\t\t\t\t\t\t\t\t\t</div> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}\n\ninterface ISmallBannerProps {\n\ttitle: string;\n\tdescrip: string;\n}\n\nexport const SmallBanner = (props: ISmallBannerProps) => {\n\treturn (\n\t\t<section className=\"home_banner_area small\">\n\t\t\t<div className=\"banner_inner small d-flex align-items-center\">\n\t\t\t\t<div className=\"overlay\"></div>\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<div className=\"col-12\">\n\t\t\t\t\t\t\t<div className=\"banner_content\">\n\t\t\t\t\t\t\t\t<h3>{props.title}</h3>\n\t\t\t\t\t\t\t\t<p>{props.descrip}</p>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n}","import React from 'react';\n\ninterface IFeatureItem {\n    icon: string;\n    title: string;\n    descrip: string;\n    link?: string;\n}\ninterface IProps {\n    items: Array<IFeatureItem>;\n}\n\nexport const AsymmetricBoxes = (props: IProps) => {\n    if (props == null || props.items == null || props.items.length < 1) {\n        return (<div></div>);\n    }\n    return (\n        <section className=\"service-area bg_darker_white area-padding-5\">\n            <div className=\"container\">\n                <div className=\"row\">\n                    {\n                        props.items.map((item: IFeatureItem, index: number) => {\n                            return (\n                                <div key={`${index}-${item.title}`} className=\"col-md-6 col-lg-4\">\n                                    <div className=\"single-service\">\n                                        <div className=\"service-icon\">\n                                            <i className={item.icon}></i>\n                                        </div>\n                                        <div className=\"service-content\">\n                                            <h5>{item.title}</h5>\n                                            <p>{item.descrip}</p>\n                                            {\n                                                item.link && <a href={item.link}>Read More</a>\n                                            }\n                                        </div>\n                                    </div>\n                                </div>\n                            );\n                        })\n                    }\n                </div>\n            </div>\n        </section>\n    );\n}","export const asymmetricBoxItems = [\n    {\n        icon: 'ti-brush-alt',\n        title: 'Design Focused',\n        descrip: 'We put a lot of care into how the apps and tools created by AssistantApps are designed and how people will interact with them.',\n    },\n    {\n        icon: 'ti-comment-alt',\n        title: 'Multi Language',\n        descrip: 'The AssistantApps are built with localization in mind from the beginning of their development. We want to be as inclusive as possible and realise that there are many languages.',\n        link: 'https://blog.kurtlourens.com/localization-localisation?ref=AssistantAppTools',\n    },\n    {\n        icon: 'ti-pulse',\n        title: 'Support',\n        descrip: 'We have multiple ways of collecting feedback from people and put a large amount of focus on the feedback received.',\n        link: 'https://nmsassistant.freshdesk.com/support/home?ref=AssistantAppTools',\n    }\n];\n\n","import React from 'react';\n\nimport { Banner } from '../../components/common/banner/banner';\nimport { AsymmetricBoxes } from '../../components/section/asymmetricBoxes';\nimport { asymmetricBoxItems } from '../../constants/homePageConstants';\n\nexport const HomePresenter: React.FC = () => {\n    return (\n        <>\n            <Banner />\n            <AsymmetricBoxes items={asymmetricBoxItems} />\n            <section className=\"about-area area-padding-5\">\n                <div className=\"container\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-12 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"area-heading\">\n                                <h4>Custom built tools&nbsp;<br />just for you. </h4>\n                                <h6>These tools are created for you to have an impact on the apps.</h6>\n                                <p>These tools help people contribute to the development of the Assistant Apps and make the apps even better <span role=\"img\" aria-label=\"muscle\">💪</span>.</p>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col-md-6 col-lg-6\">\n                                    <div className=\"single-about\">\n                                        <div className=\"about-icon\">\n                                            <i className=\"ti-thought\"></i>\n                                        </div>\n                                        <div className=\"single-about-content\">\n                                            <h5>Always online</h5>\n                                            <p>All the data is stored on the server and allows for the apps to dynamically get the data they require whenever it is needed.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6 col-lg-6\">\n                                    <div className=\"single-about\">\n                                        <div className=\"about-icon\">\n                                            <i className=\"ti-support\"></i>\n                                        </div>\n                                        <div className=\"single-about-content\">\n                                            <h5>Easy to use</h5>\n                                            <p>Designed to be easy to use, friendly UI / UX. Quick responses to support requests.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col-0 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-0\">\n                            <img src=\"/assets/img/infographics/mobileApp.svg\" alt=\"Custom built tools\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"feature-area area-padding-5 bg_one\">\n                <div className=\"container\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-12 col-xl-6 col-lg-6 col-md-0 col-sm-0 col-xs-0\">\n                            <img src=\"/assets/img/infographics/data.svg\" alt=\"dynamic data\" />\n                        </div>\n                        <div className=\"col-12 col-xl-6 col-lg-6 col-md-12 col-sm-12 col-xs-12\">\n                            <div className=\"area-heading light\">\n                                <h4>Enhance through dynamic data.</h4>\n                                <p>By keeping the data on the server and making the apps request the data when needed, we are able to be more agile and react to events a lot quicker than if the data was stored in the app. The App Stores can take anywhere from 12 to 192 hours for an update to be approved.</p>\n                            </div>\n                            <div className=\"row list\">\n                                <div className=\"col-12\">\n                                    <div className=\"single-feature d-flex\">\n                                        <div className=\"feature-icon\">\n                                            <i className=\"ti-comment-alt\"></i>\n                                        </div>\n                                        <div className=\"single-feature-content\">\n                                            <h5>Language suport</h5>\n                                            <p>The AssistantApps are built with localization in mind from the beginning of their development. We want to be as inclusive as possible and realise that there are many languages.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-12\">\n                                    <div className=\"single-feature d-flex\">\n                                        <div className=\"feature-icon\">\n                                            <i className=\"ti-book\"></i>\n                                        </div>\n                                        <div className=\"single-feature-content\">\n                                            <h5>Guides</h5>\n                                            <p>We enjoy helping players help each other. We understand that we can always learn more, whether that is in terms of a specific game, app development, marketing etc. And so the Guide system is made to help those who know a lot, pass on their knowledge to others.</p>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"statics-area area-padding-5-top\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-lg-6\">\n                            <div className=\"image-box\">\n                                <img src=\"/assets/img/infographics/report.svg\" alt=\"reports\" className=\"pr-5\" />\n                            </div>\n                        </div>\n                        <div className=\"col-lg-6\">\n                            <div className=\"area-heading\">\n                                <h4>Learning from Feedback and Analytics.</h4>\n                                <h6>We are constantly listening to feedback and keeping an eye on the analytics&nbsp;<span role=\"img\" aria-label=\"analytics\">📈</span>.</h6>\n                                <p>We want to ensure that the apps are the best that they could be and so we are constantly looking for places to improve. Direct feedback from users is the most important tool at our dispossal.</p>\n                            </div>\n                            <div className=\"single-data mb-3\">\n                                <h3>Important factors for our users</h3>\n                            </div>\n                            <div className=\"single-data\">\n                                <i className=\"ti-paint-bucket\"></i>\n                                <p>Customizability</p>\n                            </div>\n                            <div className=\"single-data\">\n                                <i className=\"ti-ruler-pencil\"></i>\n                                <p>Accuracy</p>\n                            </div>\n                            <div className=\"single-data\">\n                                <i className=\"ti-check-box\"></i>\n                                <p>Feature rich</p>\n                            </div>\n\n                        </div>\n                    </div>\n                </div>\n            </section>\n            {/* \n            <section className=\"latest-blog-area area-padding\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-lg-12\">\n                            <div className=\"area-heading\">\n                                <h4>Read Our Latest News</h4>\n                                <p>Life firmament under them evening make after called dont saying likeness<br /> isn't wherein also forth she'd air two without</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col-lg-8 col-md-6 \">\n                            <div className=\"single-blog full_image\">\n                                <div className=\"thumb\">\n                                    <img className=\"img-fluid w-100\" src=\"/assets/img/blog/1.png\" alt=\"\" />\n                                </div>\n                                <div className=\"single-blog-content\">\n                                    <p className=\"tag\">Software / Business</p>\n                                    <p className=\"date\">March 10, 2019</p>\n                                    <h4>\n                                        <a href=\"#\">Appear called is blessed good void had given from <br />\n                              which Lights Saying image.</a>\n                                    </h4>\n                                    <div className=\"meta-bottom d-flex\">\n                                        <p className=\"likes\"><i className=\"ti-comments\"></i> 02 Comments</p>\n                                        <p><i className=\"ti-heart\"></i> 15 </p>\n                                    </div>\n\n                                </div>\n\n                            </div>\n\n                        </div>\n\n\n                        <div className=\"col-lg-4 col-md-6 \">\n                            <div className=\"single-blog\">\n                                <div className=\"thumb\">\n                                    <img className=\"img-fluid w-100\" src=\"/assets/img/blog/2.png\" alt=\"\" />\n                                </div>\n                                <div className=\"single-blog-content\">\n                                    <p className=\"tag\">Software / Business</p>\n                                    <p className=\"date\">March 10, 2019</p>\n                                    <h4>\n                                        <a href=\"#\">You living thing whose After\n                            our third you also Us.</a>\n                                    </h4>\n                                    <div className=\"meta-bottom d-flex\">\n                                        <p className=\"likes\"><i className=\"ti-comments\"></i> 02 Comments</p>\n                                        <p><i className=\"ti-heart\"></i> 15 </p>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </div>\n\n                        <div className=\"col-lg-4 col-md-6 \">\n                            <div className=\"single-blog\">\n                                <div className=\"thumb\">\n                                    <img className=\"img-fluid w-100\" src=\"/assets/img/blog/1.png\" alt=\"\" />\n                                </div>\n                                <div className=\"single-blog-content\">\n                                    <p className=\"tag\">Software / Business</p>\n                                    <p className=\"date\">March 10, 2019</p>\n                                    <h4>\n                                        <a href=\"#\">You living thing whose After\n                            our third you also Us.</a>\n                                    </h4>\n                                    <div className=\"meta-bottom d-flex\">\n                                        <p className=\"likes\"><i className=\"ti-comments\"></i> 02 Comments</p>\n                                        <p><i className=\"ti-heart\"></i> 15 </p>\n                                    </div>\n\n                                </div>\n                            </div>\n\n                        </div>\n\n\n                        <div className=\"col-lg-8 col-md-6\">\n                            <div className=\"single-blog full_image\">\n                                <div className=\"thumb\">\n                                    <img className=\"img-fluid w-100\" src=\"/assets/img/blog/4.png\" alt=\"\" />\n                                </div>\n                                <div className=\"single-blog-content\">\n                                    <p className=\"tag\">Software / Business</p>\n                                    <p className=\"date\">March 10, 2019</p>\n                                    <h4>\n                                        <a href=\"#\">You living thing whose After\n                            our third you also Us.</a>\n                                    </h4>\n                                    <div className=\"meta-bottom d-flex\">\n                                        <p className=\"likes\"><i className=\"ti-comments\"></i> 02 Comments</p>\n                                        <p><i className=\"ti-heart\"></i>15</p>\n                                    </div>\n\n                                </div>\n                            </div>\n                        </div>\n\n\n                    </div>\n                </div>\n            </section> */}\n\n            <section className=\"brands-area area-padding-bottom\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-lg-10\">\n                            <div className=\"owl-carousel brand-carousel\">\n                                <div className=\"single-brand-item d-table\">\n                                    <div className=\"d-table-cell\">\n                                        <img src=\"/assets/img/logo/1.png\" alt=\"\" />\n                                    </div>\n                                </div>\n                                <div className=\"single-brand-item d-table\">\n                                    <div className=\"d-table-cell\">\n                                        <img src=\"/assets/img/logo/2.png\" alt=\"\" />\n                                    </div>\n                                </div>\n                                <div className=\"single-brand-item d-table\">\n                                    <div className=\"d-table-cell\">\n                                        <img src=\"/assets/img/logo/3.png\" alt=\"\" />\n                                    </div>\n                                </div>\n                                <div className=\"single-brand-item d-table\">\n                                    <div className=\"d-table-cell\">\n                                        <img src=\"/assets/img/logo/4.png\" alt=\"\" />\n                                    </div>\n                                </div>\n                                <div className=\"single-brand-item d-table\">\n                                    <div className=\"d-table-cell\">\n                                        <img src=\"/assets/img/logo/5.png\" alt=\"\" />\n                                    </div>\n                                </div>\n                                <div className=\"single-brand-item d-table\">\n                                    <div className=\"d-table-cell\">\n                                        <img src=\"/assets/img/logo/3.png\" alt=\"\" />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </>\n    );\n};\n","import { PublishedAppsDetailsType } from '../constants/appDetails';\nimport { DropDownWithIcon } from '../contracts/dropdown/dropDownWithIcon';\nimport { AppViewModel } from '../contracts/generated/ViewModel/appViewModel';\n\nexport const appDetailsConstantToDropDownMapper = (publishedAppsDetail: PublishedAppsDetailsType) => {\n    if (!publishedAppsDetail.publiclyVisible) return null;\n    return {\n        key: publishedAppsDetail.appType,\n        text: publishedAppsDetail.gameName,\n        value: publishedAppsDetail.appType,\n        image: { src: publishedAppsDetail.icon },\n    };\n}\n\nexport const appDetailsToAppDropDownMapper = (appDetails: Array<AppViewModel>): Array<DropDownWithIcon> => {\n    return appDetails.map((item: AppViewModel) => {\n        return {\n            key: item.guid,\n            text: item.gameName,\n            value: item.guid,\n            image: { src: item.iconUrl },\n        };\n    });\n}","export const getImageUrlFromCountryCode = (code: string) => `/assets/img/countryCode/${code}.svg`;","export const INITTRANSLATIONS = '@@Translation/Init';\nexport const EDITITEM = '@@Translation/Edit';","import State from \"../../state\";\nimport { TranslationItem } from \"../../entities/translation/translationItem\";\n\nexport const getTranslationItems = (state: State): Array<TranslationItem> =>\n    state?.translationReducer?.translationItems ?? [];","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react'\n\nimport './dropDown.scss';\n\ninterface IProps {\n    placeholder: string;\n    multiple?: boolean;\n    isLoading?: boolean;\n    value?: string | Array<string>;\n    defaultValue?: string | Array<string>;\n    options: Array<any>;\n    onChange: (key: string) => void\n}\n\nexport const DropDown: React.FC<IProps> = (props: IProps) => {\n\n    const handleChange = (e: any, data: any) => {\n        const value: string = data.value;\n        if (props.onChange != null) {\n            props.onChange(value);\n        }\n    };\n\n    const value: any = props.value || undefined;\n    const defaultValue: any = props.defaultValue || undefined;\n    return (\n        <Dropdown\n            placeholder={props.placeholder || 'Please Select'}\n            fluid\n            selection\n            value={value}\n            defaultValue={defaultValue}\n            multiple={props.multiple || false}\n            loading={props.isLoading || false}\n            options={props.options}\n            onChange={handleChange}\n        />\n    );\n}","import React from 'react';\n\ninterface IProps {\n    message: string\n}\n\nexport const Error: React.FC<IProps> = (props: IProps) => {\n    return (\n        <div className=\"container\">\n            <div className=\"row full p3\">\n                <div className=\"col-12\" style={{ textAlign: 'center' }}>\n                    <img src=\"/assets/img/error.png\"\n                        className=\"error\"\n                        alt=\"error\"\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\n\nexport const Loading = () => {\n    return (\n        <>\n            <div className=\"full-page-loader opacity80\"></div>\n            <div className=\"full-page-loader\">\n                <div className=\"cssload-container\">\n                    <ul className=\"cssload-flex-container\">\n                        <li style={{ listStyleType: 'none' }}>\n                            <img\n                                src=\"/assets/img/loader.svg\"\n                                draggable=\"false\"\n                                alt=\"loading-animation\"\n                            />\n                            <h2 className=\"largeHeading\">Loading...</h2>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </>\n    );\n}\n\nexport const SmallLoading = () => {\n    return (\n        <div className=\"container\">\n            <ul className=\"row full pt3 pb1\">\n                <div className=\"col-12\" style={{ textAlign: 'center' }}>\n                    <img\n                        src=\"/assets/img/loader_secondary.svg\"\n                        draggable=\"false\"\n                        alt=\"loading-animation\"\n                        style={{ height: '75px', display: 'inline' }}\n                    />\n                    <h2 className=\"largeHeading\" style={{ display: 'inline', verticalAlign: 'middle' }}>Loading...</h2>\n                </div>\n            </ul>\n        </div>\n    );\n}","import React from 'react';\nimport { Segment } from 'semantic-ui-react';\n\nimport { LoginDialog } from '../../components/dialog/loginDialog';\n\ninterface IProps {\n}\n\nexport const LoginRequired: React.FC<IProps> = (props: IProps) => {\n\n    return (\n        <div className=\"container\">\n            <div className=\"row full pb3\">\n                <div className=\"col-12 pt1\">\n                    <Segment placeholder style={{ minHeight: 'unset' }}>\n                        <h2 style={{ textAlign: 'center', padding: '.25em' }}>\n                            <span>Please log in</span>\n                        </h2>\n                        <div className=\"row\" style={{ justifyContent: 'center' }}>\n                            <div className=\"col-12 col-lg-6 col-md-12 g-button\">\n                                <LoginDialog colour=\"black\" showDialog={false} />\n                            </div>\n                        </div>\n                        <div className=\"pt-4 pb-4\">\n                            <h3 className=\"m0\"><b>Why do I need to be logged in?</b></h3>\n                            <p>This is one step to prevent DoS (Denial of Service) attacks. The translations shown here are the work of amazing individuals who have put a lot of effort into these translations. It would not be fair for people to take that work without their permission. By requiring a login in order to view the translations, we can track and block accounts that are trying to get all of these translations.</p>\n                        </div>\n                        <div className=\"pb-4\">\n                            <h3 className=\"m0\"><b>What do you store from my Google login?</b></h3>\n                            <p>Your Email Address and Profile Image Url. We do not store Passwords, your Password is safe with Google we do not even interact with your Password. Google does an extremely good job of keeping that secret. This data is used to link translations to your AssistantApps account, so that giving credit for submitting translations as well as voting on existing translations can be automated. Please feel free contact me at <a href=\"mailto:support@assistantapps.com\">support@assistantapps.com</a>&nbsp;if you have any concerns of how this data is stored.</p>\n                        </div>\n                        <div className=\"pb-4\">\n                            <h3 className=\"m0\"><b>How long do you store my data?</b></h3>\n                            <p>There is a process that runs every 24 hours that looks for and replaces the data of accounts that have not been logged into for over 36 months. This process replaces your email address with the AssistantApps support email and replaces your Profile Image Url with a default user image. This is done to preserve the links to other data in the database while removing your data from being visible and/or extracted if there is a data leak.</p>\n                        </div>\n                    </Segment>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport Swal from 'sweetalert2';\nimport { Button, Icon, Popup } from 'semantic-ui-react';\nimport Autosuggest, { InputProps } from 'react-autosuggest';\n\nimport { Error } from '../../components/common/error';\nimport { NetworkState } from '../../constants/networkState';\nimport { TranslationKeyViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeyViewModel';\nimport { TranslationKeySearchDropdownViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeySearchDropdownViewModel';\n\nimport './translationSearch.scss';\n\ninterface IProps {\n    currentTranslation: TranslationKeyViewModel;\n    translationKeys: Array<TranslationKeyViewModel>;\n    translationKeyDropdown: Array<TranslationKeySearchDropdownViewModel>;\n    translationKeyDropdownStatus: NetworkState;\n    setTranslationIndex: (newIndex: number) => void;\n}\n\ninterface IState {\n    isOpen: boolean,\n    value: string,\n    suggestions: Array<TranslationKeySearchDropdownViewModel>;\n    filteredDropdownList: Array<TranslationKeySearchDropdownViewModel>;\n}\n\nexport class TranslationSearch extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        const filtered = this.getFilteredDropdownList(props.translationKeys, props.translationKeyDropdown);\n        this.state = {\n            value: '',\n            suggestions: [],\n            filteredDropdownList: filtered,\n            isOpen: false,\n        };\n    }\n\n    getFilteredDropdownList = (translationKeys: Array<TranslationKeyViewModel>, translationKeyDropdown: Array<TranslationKeySearchDropdownViewModel>) => {\n        const filtered = translationKeyDropdown\n            .filter(tkd => translationKeys.findIndex(tk => tk.guid === tkd.guid) >= 0);\n        return filtered;\n    };\n\n    componentDidUpdate(prevProps: IProps, prevState: IState) {\n        const { translationKeys, translationKeyDropdown } = this.props;\n        if (translationKeys.length !== prevProps.translationKeys.length ||\n            translationKeyDropdown.length !== prevProps.translationKeyDropdown.length\n        ) {\n            const filtered = this.getFilteredDropdownList(translationKeys, translationKeyDropdown);\n            if (filtered.length !== prevState.filteredDropdownList.length) {\n                this.setState(() => {\n                    return {\n                        filteredDropdownList: filtered,\n                    }\n                })\n            }\n        }\n    }\n\n    onChange = (event: React.FormEvent<any>, params: Autosuggest.ChangeEvent) => {\n        this.setState({\n            value: params.newValue\n        });\n    };\n\n    getSuggestions = (value: string) => {\n        const lowerValue = value.toLowerCase();\n        const list = this.state.filteredDropdownList.filter(tkd => {\n            return tkd.key.toLowerCase().includes(lowerValue)\n                || tkd.value.toLowerCase().includes(lowerValue)\n                || tkd.translation?.toLowerCase().includes(lowerValue)\n        });\n        return (list || []).slice(0, 10);\n    }\n\n    getSuggestionValue = (value: TranslationKeySearchDropdownViewModel) => {\n        return value.key;\n    }\n\n    onSuggestionsFetchRequested = ({ value }: any) => {\n        this.setState({\n            suggestions: this.getSuggestions(value)\n        });\n    };\n\n    onSuggestionsSelected = (event: React.FormEvent<any>, params: Autosuggest.SuggestionSelectedEventData<TranslationKeySearchDropdownViewModel>) => {\n        const guidToLookup = params?.suggestion?.guid;\n        if (guidToLookup != null) {\n            const index = this.props.translationKeys.findIndex(tkd => tkd.guid === guidToLookup)\n            if (index >= 0) {\n                this.props.setTranslationIndex(index);\n            }\n        }\n        this.setState({\n            value: ''\n        });\n        this.onSuggestionsClearRequested();\n    };\n\n    onSuggestionsClearRequested = () => {\n        this.setState({\n            suggestions: []\n        });\n    };\n\n    render() {\n\n        if (this.props.currentTranslation == null) {\n            return (<div></div>);\n        }\n\n        if (this.props.translationKeyDropdownStatus === NetworkState.Error) {\n            return (<Error message=\"Something went wrong\" />);\n        }\n\n        const renderSuggestion = (suggestion: TranslationKeySearchDropdownViewModel) => (\n            <div className=\"suggestion-option\">\n                <p className=\"suggestion-heading text-truncate\">{suggestion.value}</p>\n                {\n                    suggestion.translation != null &&\n                    <p className=\"suggestion-body text-truncate\">\n                        <i>\n                            {suggestion.translation}<br />\n                        </i>\n                    </p>\n                }\n            </div>\n\n        );\n\n        const { value, suggestions } = this.state;\n\n        const inputProps: InputProps<TranslationKeySearchDropdownViewModel> = {\n            placeholder: 'Enter the Key or English translation',\n            value,\n            onChange: this.onChange,\n        };\n\n        return (\n            <div className={classNames('container pb1 ta-center', { 'hide-search': !this.state.isOpen })}>\n                <Autosuggest\n                    id=\"search-list\"\n                    suggestions={suggestions}\n                    onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n                    onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n                    onSuggestionSelected={this.onSuggestionsSelected}\n                    getSuggestionValue={this.getSuggestionValue}\n                    renderSuggestion={renderSuggestion}\n                    inputProps={inputProps}\n                />\n                <Popup\n                    content=\"Search for a specific translation\"\n                    trigger={(\n                        <Button icon onClick={() => {\n                            this.setState((prevState: IState) => {\n                                return {\n                                    isOpen: !prevState.isOpen\n                                }\n                            })\n                        }}>\n                            {\n                                this.props.translationKeyDropdownStatus === NetworkState.Loading\n                                    ? <Icon name='spinner' />\n                                    : <Icon name='search' />\n                            }\n                        </Button>\n                    )}\n                />\n                <Popup\n                    content=\"Navigate to a specified page\"\n                    trigger={(\n                        <Button icon onClick={() => {\n                            Swal.fire({\n                                title: 'Please enter the page number you wish to navigate to',\n                                input: 'number',\n                                inputAttributes: {\n                                    autocapitalize: 'off'\n                                },\n                                showCancelButton: true,\n                                confirmButtonText: 'Navigate',\n                            }).then((result) => {\n                                if (result.isConfirmed && !isNaN(result.value as number)) {\n                                    console.log(result.value as number);\n                                    this.props.setTranslationIndex((result.value as number) - 1);\n                                }\n                            });\n                        }}><Icon name='fast forward' /></Button>\n                    )}\n                />\n            </div>\n        );\n    }\n};","import React from 'react';\nimport { Button, Icon, Label, List, Popup } from 'semantic-ui-react';\nimport { TranslationSubmissionWithVotesViewModel } from '../../contracts/generated/ViewModel/Translation/translationSubmissionWithVotesViewModel';\nimport './_translationVoteItem.scss';\n\n\ninterface IProps {\n    details: TranslationSubmissionWithVotesViewModel;\n    isCopyTextMode?: boolean;\n    onClick: () => void;\n    onEdit?: (currentValue: string) => void;\n    onDelete: () => void;\n    onReport: (badTrans: TranslationSubmissionWithVotesViewModel) => void;\n}\n\nexport const TranslationVoteItem: React.FC<IProps> = (props: IProps) => {\n    const numMaxChars = 20;\n    let translationTextIsLarge = false;\n\n    var translationText = props.details.text;\n    const numTextChars = props.details.text.length;\n    if (numTextChars > numMaxChars) {\n        translationText = props.details.text.substring(0, numMaxChars) + '...';\n        translationTextIsLarge = true;\n    }\n    var username = props.details.username;\n    const numUsernameChars = props.details.text.length;\n    if (numUsernameChars > numMaxChars) {\n        username = props.details.username.substring(0, numMaxChars) + '...';\n    }\n\n    var popupContent = 'Translator: ' + username;\n    if (translationTextIsLarge) {\n        popupContent = props.details.text + ' - Translated by: ' + props.details.username;\n    }\n\n    const renderIcon = (localProps: IProps) => {\n        var options = [];\n        var subOptions = [];\n\n        if (localProps.onEdit != null) {\n            const onEdit = localProps.onEdit;\n            subOptions.push(\n                {\n                    guid: `edit-${localProps.details.guid}`,\n                    component: (\n                        <Label key={`edit-${localProps.details.guid}`}\n                            onClick={() => onEdit(localProps.details.text)}\n                            basic color=\"grey\" className=\"pointer noselect\">\n                            <Icon name=\"edit\" />\n                            <span>Edit</span>\n                        </Label>\n                    )\n                }\n            );\n        }\n\n        if (localProps.details.belongsToUser) {\n            subOptions.push(\n                {\n                    guid: `delete-${localProps.details.guid}`,\n                    component: (\n                        <Label key={`delete-${localProps.details.guid}`}\n                            onClick={() => localProps.onDelete()}\n                            basic color=\"red\" className=\"pointer noselect\" >\n                            <Icon name=\"trash\" />\n                            <span>Delete</span>\n                        </Label>\n                    )\n                }\n            );\n        } else {\n            subOptions.push(\n                {\n                    guid: `report-${localProps.details.guid}`,\n                    component: (\n                        <Label key={`report-${localProps.details.guid}`} onClick={() => localProps.onReport(localProps.details)}\n                            basic color=\"red\" className=\"pointer noselect\" >\n                            <Icon name=\"announcement\" />\n                            <span>Report</span>\n                        </Label>\n                    )\n                }\n            );\n        }\n\n        const additionalCss = props.details.isCurentVote ? 'notAllowed' : '';\n        const localOnClick = props.details.isCurentVote ? () => null : props.onClick;\n        if (!localProps.isCopyTextMode) {\n            options.push(\n                <Label key={`vote-${localProps.details.guid}`} onClick={localOnClick} className={additionalCss}\n                    basic pointing='left' color={localProps.details.isCurentVote ? 'green' : undefined} >\n                    {\n                        localProps.details.isCurentVote && <Icon name=\"check\" />\n                    }\n                    <span>{localProps.details.votes} votes</span>\n                </Label>\n            );\n        } else {\n            options.push(\n                <Label key=\"options-copy\" basic pointing='left' onClick={props.onClick}>\n                    <Icon name=\"copy\" />\n                    <span>Copy</span>\n                </Label>\n            );\n        }\n\n        if (subOptions.length > 0) {\n            // if (subOptions.length == 1) {\n            //     options.push(subOptions[0].component);\n            //     return options;\n            // }\n            options.push(\n                <Popup key=\"options-ellipses\" wide on='click'\n                    trigger={\n                        <Label basic>\n                            <Icon name=\"ellipsis vertical\" className=\"m-0\" />\n                        </Label>\n                    }>\n                    <List>\n                        {\n                            subOptions.map((item: any) => {\n                                return (\n                                    <List.Item key={item.guid}>\n                                        {item.component}\n                                    </List.Item>\n                                );\n                            })\n                        }\n                    </List>\n                </Popup>\n            );\n        }\n\n        return options;\n    }\n\n    const additionalCss = props.details.isCurentVote ? 'notAllowed' : '';\n    const localOnClick = props.details.isCurentVote ? () => null : props.onClick;\n    return (\n        <Button as='div' labelPosition='right' className=\"vote-opt\">\n            <Popup wide\n                content={popupContent}\n                trigger={\n                    <Button icon onClick={localOnClick} className={additionalCss}>\n                        {translationText}\n                    </Button>\n                }\n            />\n            {renderIcon(props)}\n        </Button>\n    )\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Form, Placeholder, Segment, TextArea, TextAreaProps } from 'semantic-ui-react';\nimport { NetworkState } from '../../constants/networkState';\nimport { TranslationKeyViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeyViewModel';\nimport { TranslationSubmissionWithVotesViewModel } from '../../contracts/generated/ViewModel/Translation/translationSubmissionWithVotesViewModel';\nimport { ConditionalToolTip } from '../common/conditionalTooltip';\nimport { TranslationVoteItem } from './translationVoteItem';\n\ninterface IProps {\n    userGuid: string;\n    currentTranslation: TranslationKeyViewModel;\n\n    // Container function\n    submitTranslation: () => void;\n    setTranslation: (value: string) => void;\n    deleteTranslation: (value: string) => void;\n    setTranslationValue: (value: string) => void;\n    toggleShowSubmissionTextBox: (event: any) => void;\n    reportTranslation: (value: TranslationSubmissionWithVotesViewModel) => void;\n\n    // Container services\n    status: NetworkState;\n    translation: string;\n    showOwnSubmissionTextBox: boolean;\n    voteOptions: Array<TranslationSubmissionWithVotesViewModel>;\n}\n\nexport const TranslationVotePresenter: React.FC<IProps> = (props: IProps) => {\n    const submitTranslationDisabled = props.translation == null || props.translation.length < 2;\n\n    if (props.status === NetworkState.Loading) {\n        return (\n            <>\n                <hr />\n                <div className=\"row full\">\n                    <div className=\"col-12 pb2\">\n                        <Placeholder style={{ margin: '0 auto' }}>\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                            <Placeholder.Line />\n                        </Placeholder>\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    if (props.currentTranslation == null) {\n        return (<div></div>);\n    }\n\n    if (props.userGuid == null || props.userGuid.length < 1) return (\n        <Segment placeholder style={{ minHeight: 'unset' }}>\n            <p style={{ textAlign: 'center' }}>Please log in to vote</p>\n        </Segment>\n    );\n\n    const hasVoteOptions = props.voteOptions != null && props.voteOptions.length > 0;\n    const showOwnSubmissionTextBox = props.showOwnSubmissionTextBox || !hasVoteOptions;\n\n    return (\n        <>\n            <hr />\n            <div className=\"row full pt1\">\n                <div className={classNames('col-12', { inVisible: showOwnSubmissionTextBox })}>\n                    <p>Submissions from previous Translators</p>\n                    {\n                        props.voteOptions.map((voteOpt: TranslationSubmissionWithVotesViewModel) => {\n                            return (\n                                <TranslationVoteItem\n                                    key={voteOpt.guid}\n                                    details={voteOpt}\n                                    onClick={() => props.setTranslation(voteOpt.guid)}\n                                    onEdit={(newValue: string) => props.setTranslationValue(newValue)}\n                                    onDelete={() => props.deleteTranslation(voteOpt.guid)}\n                                    onReport={props.reportTranslation}\n                                />\n                            );\n                        })\n                    }\n                    <p className={classNames('pt1', { inVisible: showOwnSubmissionTextBox })}>\n                        <span>Don't see an option you like and want to submit your own?&nbsp;</span>\n                        <a href=\"!\" onClick={(e: any) => props.toggleShowSubmissionTextBox(e)}>click here</a>\n                    </p>\n                </div>\n                <div className={classNames('col-12', { inVisible: hasVoteOptions })}>\n                    <p style={{ textAlign: 'center' }}>There are no submissions yet</p>\n                </div>\n                <div className={classNames('col-12', { inVisible: !showOwnSubmissionTextBox })}>\n                    <p>\n                        <span>Submit your own Translation</span>\n                        {\n                            hasVoteOptions &&\n                            <>\n                                <strong>&nbsp;OR&nbsp;</strong>\n                                <a href=\"!\" onClick={(e: any) => props.toggleShowSubmissionTextBox(e)}>Vote on existing translation</a>\n                            </>\n                        }\n                    </p>\n                    <Form>\n                        <TextArea\n                            placeholder={`Translation for: ${props.currentTranslation.original}`}\n                            style={{ marginBottom: '1em' }}\n                            value={props.translation}\n                            onChange={(_: any, data: TextAreaProps) => {\n                                props.setTranslationValue(data.value?.toString() || '');\n                            }}\n                        />\n                    </Form>\n                    {\n                        props.voteOptions.map((voteOpt: TranslationSubmissionWithVotesViewModel) => {\n                            return (\n                                <TranslationVoteItem\n                                    key={voteOpt.guid + '-edit'}\n                                    details={voteOpt}\n                                    isCopyTextMode={true}\n                                    onClick={() => props.setTranslationValue(voteOpt.text)}\n                                    onDelete={() => { }}\n                                    onReport={props.reportTranslation}\n                                />\n                            );\n                        })\n                    }\n                    <ConditionalToolTip message='This will submit a translation for the currently visible item' showToolTip={true}>\n                        <button className={classNames('button full mt1', { disabled: submitTranslationDisabled })}\n                            onClick={props.submitTranslation}>Submit translation</button>\n                    </ConditionalToolTip>\n                </div>\n            </div>\n        </>\n    );\n};\n","import React from 'react';\nimport Swal from 'sweetalert2';\nimport { NetworkState } from '../../constants/networkState';\nimport { TranslationKeyViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeyViewModel';\nimport { TranslationSubmissionViewModel } from '../../contracts/generated/ViewModel/Translation/translationSubmissionViewModel';\nimport { TranslationSubmissionWithVotesViewModel } from '../../contracts/generated/ViewModel/Translation/translationSubmissionWithVotesViewModel';\nimport { TranslationReportAddViewModel } from '../../contracts/generated/ViewModel/Translation/translationReportAddViewModel';\nimport { Result } from '../../contracts/results/ResultWithValue';\nimport { StorageService } from '../../services/StorageService';\nimport { TranslationVotePresenter } from './translationVotePresenter';\nimport { AssistantAppsApiService } from '../../services/api/AssistantAppsApiService';\nimport { IDependencyInjection, withServices } from '../../integration/dependencyInjection';\n\ninterface IWithDepInj {\n    assistantAppsApiService: AssistantAppsApiService;\n}\ninterface IWithoutDepInj {\n    userGuid: string;\n    languageGuid: string;\n    currentTranslation: TranslationKeyViewModel;\n}\n\ninterface IProps extends IWithDepInj, IWithoutDepInj { }\n\ninterface IState {\n    status: NetworkState;\n    translation: string;\n    showOwnSubmissionTextBox: boolean;\n    voteOptions: Array<TranslationSubmissionWithVotesViewModel>;\n    storageServ: StorageService;\n}\n\nexport class TranslationVoteContainerUnconnected extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            status: NetworkState.Success,\n            translation: '',\n            showOwnSubmissionTextBox: false,\n            voteOptions: [],\n            storageServ: new StorageService(),\n        };\n    }\n\n    componentDidMount() {\n        this.fetchVotes();\n    }\n\n    componentDidUpdate(prevProps: IProps) {\n        if (this.props.userGuid !== prevProps.userGuid ||\n            this.props.languageGuid !== prevProps.languageGuid ||\n            (this.props.currentTranslation?.guid || '') !== (prevProps.currentTranslation?.guid || '')) {\n            this.fetchVotes();\n        }\n    }\n\n    fetchVotes = async () => {\n        if (this.props == null) return;\n        if (this.props.currentTranslation == null) return;\n        if (this.props.currentTranslation.guid == null) return;\n        if (this.props.userGuid == null || this.props.userGuid.length < 1) return;\n\n        this.setState(() => {\n            return {\n                status: NetworkState.Loading,\n                showOwnSubmissionTextBox: false,\n                translation: '',\n                voteOptions: [],\n            }\n        });\n\n        var translationVotesResult = await this.props.assistantAppsApiService.getSubmittedTranslations(this.props.currentTranslation.guid, this.props.languageGuid);\n        if (!translationVotesResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    status: NetworkState.Error\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                status: NetworkState.Success,\n                voteOptions: translationVotesResult.value\n            }\n        });\n    }\n\n    setTranslation = async (translationGuid: string) => {\n        await this.translationApiCall(() => this.props.assistantAppsApiService.selectTranslationVote({\n            guid: this.props.userGuid,\n            translationGuid: translationGuid,\n            userGuid: this.props.userGuid,\n        }));\n    }\n\n    deleteTranslation = async (translationGuid: string) => {\n        await this.translationApiCall(() => this.props.assistantAppsApiService.deleteTranslation(translationGuid));\n    }\n\n    translationApiCall = async (apiFunc: () => Promise<Result>) => {\n        this.setState(() => {\n            return {\n                status: NetworkState.Loading\n            }\n        });\n        if (this.props.userGuid == null || this.props.userGuid.length < 1) {\n            Swal.fire({\n                icon: 'info',\n                title: 'Login required',\n                text: 'You are not logged in, you need to be logged in in order to submit translations or vote on translation. Please log in by clicking the icon in the top right.',\n            })\n            return;\n        }\n        var apiResult = await apiFunc();\n        if (!apiResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    status: NetworkState.Error\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                status: NetworkState.Success\n            }\n        });\n        this.fetchVotes();\n    }\n\n    submitTranslation = async () => {\n        this.setState(() => {\n            return {\n                status: NetworkState.Loading\n            }\n        });\n        var voteObj: TranslationSubmissionViewModel = {\n            translationKeyGuid: this.props.currentTranslation.guid,\n            languageGuid: this.props.languageGuid,\n            text: this.state.translation,\n        }\n        var transResult = await this.props.assistantAppsApiService.submitTranslation(voteObj);\n        if (!transResult.isSuccess) {\n            if (transResult.statusCode != null && transResult.statusCode === 409) {\n                Swal.fire({\n                    icon: 'warning',\n                    title: 'Translation Exists!',\n                    text: 'The translation you submitted already exists, please consider voting on an existing translation instead or submit a translation that does not exactly match an existing translation.',\n                });\n            }\n            this.setState(() => {\n                return {\n                    // votes: [],\n                    status: NetworkState.Error\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                status: NetworkState.Success\n            }\n        });\n        this.fetchVotes();\n    }\n\n    toggleShowSubmissionTextBox = (e?: any) => {\n        if (e != null) e.preventDefault();\n        this.setState((prevState: IState) => {\n            return {\n                translation: '',\n                showOwnSubmissionTextBox: !prevState.showOwnSubmissionTextBox,\n            }\n        })\n    }\n\n    setTranslationValue = (text: string) => {\n        this.setState(() => {\n            return {\n                translation: text,\n                showOwnSubmissionTextBox: true,\n            }\n        })\n    }\n\n    reportTranslation = async (badTrans: TranslationSubmissionWithVotesViewModel) => {\n        const { value: additionalText } = await Swal.fire({\n            icon: 'question',\n            title: 'Extra Info',\n            text: 'Is there any extra information that you would like to point out? This may help us remove the translation item sooner',\n            input: 'text',\n            inputPlaceholder: 'Extra information',\n            showCancelButton: true,\n        });\n\n        if (additionalText == null) return;\n\n        this.setState(() => {\n            return {\n                status: NetworkState.Loading\n            }\n        });\n        var reportObj: TranslationReportAddViewModel = {\n            translationGuid: badTrans.guid,\n            translationKey: this.props.currentTranslation.key,\n            offendingText: badTrans.text,\n            origText: this.props.currentTranslation.original,\n            languageGuid: this.props.languageGuid,\n            additionalMessage: additionalText as string,\n        }\n        var reportResult = await this.props.assistantAppsApiService.reportTranslation(reportObj);\n        if (!reportResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    status: NetworkState.Error\n                }\n            });\n            return;\n        }\n        Swal.fire({\n            icon: 'success',\n            title: 'Thank you!',\n            text: 'You are helping to make the AssistantApps Translations better!',\n        })\n        this.setState(() => {\n            return {\n                status: NetworkState.Success\n            }\n        });\n    }\n\n    render() {\n        return (\n            <TranslationVotePresenter\n                userGuid={this.props.userGuid}\n                currentTranslation={this.props.currentTranslation}\n                submitTranslation={this.submitTranslation}\n                setTranslation={this.setTranslation}\n                deleteTranslation={this.deleteTranslation}\n                setTranslationValue={this.setTranslationValue}\n                toggleShowSubmissionTextBox={this.toggleShowSubmissionTextBox}\n                reportTranslation={this.reportTranslation}\n                status={this.state.status}\n                translation={this.state.translation}\n                showOwnSubmissionTextBox={this.state.showOwnSubmissionTextBox}\n                voteOptions={this.state.voteOptions}\n            />\n        );\n    }\n};\n\n\nexport const TranslationVoteContainer = withServices<IWithoutDepInj, IWithDepInj>(\n    TranslationVoteContainerUnconnected,\n    (services: IDependencyInjection) => ({\n        assistantAppsApiService: services.assistantAppsApiService,\n    })\n);","import React from 'react';\nimport Lightbox from 'react-image-lightbox';\nimport { Segment } from 'semantic-ui-react';\nimport { NetworkState } from '../../constants/networkState';\nimport { TranslationImageViewModel } from '../../contracts/generated/ViewModel/Translation/translationImageViewModel';\nimport { IDependencyInjection, withServices } from '../../integration/dependencyInjection';\nimport { AssistantAppsApiService } from '../../services/api/AssistantAppsApiService';\nimport { SmallLoading } from '../common/loading';\n\ninterface IWithDepInj {\n    assistantAppsApiService: AssistantAppsApiService;\n}\ninterface IWithoutDepInj {\n    translationKeyGuid: string;\n    userGuid: string;\n}\n\ninterface IProps extends IWithDepInj, IWithoutDepInj { }\n\ninterface IState {\n    status: NetworkState;\n    images: Array<TranslationImageViewModel>;\n    photoIndex: number,\n    isOpen: boolean,\n}\n\nexport class TranslationImagesUnconnected extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            status: NetworkState.Loading,\n            images: [],\n            photoIndex: 0,\n            isOpen: false,\n        };\n    }\n\n    componentDidMount() {\n        this.fetchTranslationKeyImages();\n    }\n\n    componentDidUpdate(prevProps: IProps) {\n        if (this.props.userGuid !== prevProps.userGuid ||\n            this.props.translationKeyGuid !== prevProps.translationKeyGuid) {\n            this.fetchTranslationKeyImages();\n        }\n    }\n\n    fetchTranslationKeyImages = async () => {\n        if (this.props.userGuid == null || this.props.userGuid.length < 1) {\n            this.setState(() => {\n                return {\n                    images: [],\n                    status: NetworkState.Success\n                }\n            });\n            return;\n        }\n\n        var imagesResult = await this.props.assistantAppsApiService.getTranslationImages(this.props.translationKeyGuid);\n        if (!imagesResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    status: NetworkState.Error\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                images: imagesResult.value,\n                status: NetworkState.Success\n            }\n        });\n    }\n    render() {\n        if (this.state.status === NetworkState.Loading) return <SmallLoading />\n        if (this.props.userGuid == null || this.props.userGuid.length < 1) return (\n            <Segment placeholder style={{ minHeight: 'unset' }}>\n                <p style={{ textAlign: 'center' }}>Please log in to view images</p>\n            </Segment>\n        );\n\n        const images = this.state.images.map((item: TranslationImageViewModel) => {\n            return {\n                guid: item.guid,\n                imageUrl: `${window.config.assistantAppsTranslationCdnUrl}/${item.imagePath}`,\n            }\n        });\n\n        if (images == null || images.length < 1) return (\n            <Segment placeholder style={{ minHeight: 'unset' }}>\n                <p style={{ textAlign: 'center' }}>No images</p>\n            </Segment>\n        );\n\n        return (\n            <div className=\"row\" key={this.props.translationKeyGuid}>\n                {\n                    images.map((item: any, photoIndex: number) => {\n                        return (\n                            <div key={item.guid} className=\"col-4\" style={{ textAlign: 'center' }}>\n                                <img\n                                    src={item.imageUrl}\n                                    draggable=\"false\"\n                                    alt={item.guid}\n                                    className=\"translation-preview pointer\"\n                                    onClick={() => {\n                                        this.setState(() => {\n                                            return {\n                                                photoIndex,\n                                                isOpen: true,\n                                            }\n                                        })\n                                    }}\n                                />\n                            </div>\n                        );\n                    })\n                }\n                <div className=\"col-12 ta-center\"><i>Click to enlarge <span role=\"img\" aria-label=\"magnify\">🔍</span></i></div>\n                {\n                    this.state.isOpen &&\n                    <Lightbox\n                        mainSrc={images[this.state.photoIndex].imageUrl}\n                        nextSrc={images[(this.state.photoIndex + 1) % images.length].imageUrl}\n                        prevSrc={images[(this.state.photoIndex + images.length - 1) % images.length].imageUrl}\n                        onCloseRequest={() => this.setState({ isOpen: false })}\n                        onMovePrevRequest={() =>\n                            this.setState({\n                                photoIndex: (this.state.photoIndex + images.length - 1) % images.length,\n                            })\n                        }\n                        onMoveNextRequest={() =>\n                            this.setState({\n                                photoIndex: (this.state.photoIndex + 1) % images.length,\n                            })\n                        }\n                    />\n                }\n            </div>\n        );\n    }\n};\n\nexport const TranslationImages = withServices<IWithoutDepInj, IWithDepInj>(\n    TranslationImagesUnconnected,\n    (services: IDependencyInjection) => ({\n        assistantAppsApiService: services.assistantAppsApiService,\n    })\n);","import React from 'react';\nimport { Placeholder, Segment } from 'semantic-ui-react';\nimport { TranslationImages } from '../../components/translationImages/translationImages';\nimport { NetworkState } from '../../constants/networkState';\nimport { TranslationKeyViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeyViewModel';\n\ninterface IProps {\n    translationKeyStatus: NetworkState;\n    currentTranslation: TranslationKeyViewModel;\n    userGuid: string\n}\n\nexport const MainTranslationPanel = (props: IProps) => {\n    if (props.translationKeyStatus === NetworkState.Loading) {\n        return (\n            <div className=\"row full\">\n                <div className=\"col-12 pb2\">\n                    <Placeholder style={{ margin: '0 auto' }}>\n                        <Placeholder.Line />\n                    </Placeholder>\n                </div>\n                <div className=\"col-12 col-md-6\">\n                    <Placeholder>\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                        <Placeholder.Line />\n                    </Placeholder>\n                </div>\n                <div className=\"col-12 col-md-6\">\n                    <Placeholder>\n                        <Placeholder.Image />\n                    </Placeholder>\n                </div>\n            </div>\n        );\n    }\n\n    if (props.currentTranslation == null) {\n        return (<div></div>);\n    }\n\n    return (\n        <div className=\"row full pt2\">\n            <div className=\"col-12\" style={{ textAlign: 'center' }}>\n                <p className=\"pb1\"><strong>Key: </strong>{props.currentTranslation.key}</p>\n            </div>\n            <div className=\"col-12 col-md-6\">\n                <Segment placeholder style={{ minHeight: 'unset' }}>\n                    <p>{props.currentTranslation.original}</p>\n                </Segment>\n                <i style={{ display: 'block' }}>\n                    <strong>Description: </strong>{props.currentTranslation.meta}\n                </i>\n            </div>\n            <div className=\"col-12 col-md-6\">\n                <TranslationImages\n                    translationKeyGuid={props.currentTranslation.guid}\n                    userGuid={props.userGuid}\n                />\n            </div>\n        </div>\n    );\n}\n\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Pagination, PaginationProps } from 'semantic-ui-react';\nimport { SmallBanner } from '../../components/common/banner/banner';\nimport { ConditionalToolTip } from '../../components/common/conditionalTooltip';\nimport { DropDown } from '../../components/common/dropDown/dropDown';\nimport { Error } from '../../components/common/error';\nimport { Loading } from '../../components/common/loading';\nimport { LoginRequired } from '../../components/common/loginRequired';\nimport { TranslationSearch } from '../../components/translationSearch/translationSearch';\nimport { TranslationVoteContainer } from '../../components/translationVote/translationVoteContainer';\nimport { NetworkState } from '../../constants/networkState';\nimport { DropDownWithIcon } from '../../contracts/dropdown/dropDownWithIcon';\nimport { TranslationKeySearchDropdownViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeySearchDropdownViewModel';\nimport { TranslationKeyViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeyViewModel';\nimport { MainTranslationPanel } from './translationComponents';\n\ninterface IProps {\n    status: NetworkState;\n    appStatus: NetworkState;\n    appDropDowns: Array<DropDownWithIcon>;\n    langStatus: NetworkState;\n    langDropDowns: Array<DropDownWithIcon>;\n\n    selectedApps: Array<string>;\n    selectedLanguage: string;\n\n    translationKeys: Array<TranslationKeyViewModel>;\n    translationKeyIndex: number;\n    translationKeyStatus: NetworkState;\n    translationKeyDropdown: Array<TranslationKeySearchDropdownViewModel>;\n    translationKeyDropdownStatus: NetworkState;\n\n    userGuid: string;\n\n    setApps: (app: Array<string>) => void;\n    setLanguage: (language: string) => void;\n    setTranslationIndex: (newIndex: number) => void;\n    fetchTranslationKeys: (ignoreLanguage?: boolean) => void;\n}\n\nexport const TranslationPresenter: React.FC<IProps> = (props: IProps) => {\n    if (props.status === NetworkState.Error) return <Error message=\"Something went wrong\" />;\n    if (props.status === NetworkState.Loading) return <Loading />;\n\n    const isNotLoggedIn = props.userGuid == null || props.userGuid.length < 1;\n    const translationButtonsDisabled = props.selectedApps == null || props.selectedApps.length < 1 ||\n        props.selectedLanguage == null || props.selectedLanguage.length < 1 || isNotLoggedIn;\n    const showPagination = props.translationKeys != null && props.translationKeys.length > 0\n        && props.translationKeyStatus === NetworkState.Success;\n\n    const currentTranslation = props.translationKeys[props.translationKeyIndex];\n\n    let paginationComp = (<div></div>);\n    if (showPagination) {\n        paginationComp = (\n            <div className=\"container\" style={{ textAlign: 'center', overflowX: 'auto' }}>\n                <Pagination\n                    totalPages={props.translationKeys.length}\n                    activePage={props.translationKeyIndex + 1}\n                    boundaryRange={1}\n                    siblingRange={2}\n                    ellipsisItem={{ content: <Icon name=\"ellipsis horizontal\" />, icon: true }}\n                    firstItem={null}\n                    lastItem={null}\n                    // firstItem={{ content: <Icon name=\"angle double left\" />, icon: true }}\n                    // lastItem={{ content: <Icon name=\"angle double right\" />, icon: true }}\n                    prevItem={{ content: <Icon name=\"angle left\" />, icon: true }}\n                    nextItem={{ content: <Icon name=\"angle right\" />, icon: true }}\n                    onPageChange={(event: any, pageData: PaginationProps) => {\n                        const newIndex: any = pageData.activePage;\n                        props.setTranslationIndex(newIndex - 1);\n                    }}\n                />\n            </div>\n        );\n    }\n\n    const banner = (\n        <SmallBanner\n            title=\"Translation\"\n            descrip=\"Translation tool for the Assistant Apps\"\n        />\n    );\n\n    if (isNotLoggedIn) {\n        return (\n            <>\n                {banner}\n                <div className=\"container\">\n                    <div className=\"row full pt3 pb3\">\n                        <LoginRequired />\n                    </div>\n                </div>\n            </>\n        );\n    }\n    console.log(props.appDropDowns)\n    return (\n        <>\n            {banner}\n            <div className=\"container\">\n                <div className=\"row full pt3 pb1\">\n                    <div className=\"col-12 col-md-6\">\n                        <label>Please select Apps you would like to translate for</label>\n                        {\n                            (props.appStatus !== NetworkState.Error)\n                                ? <DropDown\n                                    placeholder=\"Select Apps\"\n                                    options={props.appDropDowns}\n                                    multiple={true}\n                                    isLoading={props.appStatus === NetworkState.Loading}\n                                    onChange={(apps: any) => props.setApps(apps)}\n                                />\n                                : <p>Error loading apps, please refresh the page or contact us</p>\n                        }\n                    </div>\n                    <div className=\"col-12 col-md-6 custom-drop-down pt1 pt-md-0\">\n                        <label>Please select a language</label>\n                        {\n                            (props.langStatus !== NetworkState.Error)\n                                ? <DropDown\n                                    placeholder=\"Select Language\"\n                                    options={props.langDropDowns}\n                                    isLoading={props.langStatus === NetworkState.Loading}\n                                    onChange={props.setLanguage}\n                                />\n                                : <p>Error loading languages, please refresh the page or contact us</p>\n                        }\n                    </div>\n                    <div className=\"col-12 p1\">\n                        <ConditionalToolTip\n                            message=\"Must select at least one App and a Language\"\n                            showToolTip={translationButtonsDisabled}>\n                            <button\n                                className={classNames(\"button full\", { disabled: translationButtonsDisabled })}\n                                onClick={() => !translationButtonsDisabled && props.fetchTranslationKeys()}>\n                                <span>Load all items</span>\n                            </button>\n                        </ConditionalToolTip>\n                    </div>\n                    <div className=\"col-12\">\n                        <ConditionalToolTip\n                            message=\"Must select at least one App and a Language\"\n                            showToolTip={translationButtonsDisabled}>\n                            <button\n                                className={classNames(\"button full\", { disabled: translationButtonsDisabled })}\n                                onClick={() => !translationButtonsDisabled && props.fetchTranslationKeys(true)}>\n                                <span>Load untranslated items</span>\n                            </button>\n                        </ConditionalToolTip>\n                    </div>\n                </div>\n            </div>\n\n            <TranslationSearch\n                currentTranslation={currentTranslation}\n                translationKeys={props.translationKeys}\n                translationKeyDropdown={props.translationKeyDropdown}\n                translationKeyDropdownStatus={props.translationKeyDropdownStatus}\n                setTranslationIndex={props.setTranslationIndex}\n            />\n            {paginationComp}\n\n            <div className=\"container\">\n                <MainTranslationPanel\n                    translationKeyStatus={props.translationKeyStatus}\n                    currentTranslation={currentTranslation}\n                    userGuid={props.userGuid}\n                />\n            </div>\n            <div className=\"container pt1\">\n                {\n                    props.translationKeyStatus === NetworkState.Success &&\n                    <TranslationVoteContainer\n                        languageGuid={props.selectedLanguage}\n                        currentTranslation={currentTranslation}\n                        userGuid={props.userGuid}\n                    />\n                }\n            </div>\n            <div className=\"container pt1\" style={{ textAlign: 'center' }}>\n                {\n                    props.translationKeyStatus === NetworkState.Success &&\n                    (props.translationKeys.length === 0) &&\n                    <h2>No items to display</h2>\n                }\n            </div>\n\n            <div className=\"pt3 pb3\">\n                {paginationComp}\n            </div>\n        </>\n    );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { NetworkState } from '../../constants/networkState';\nimport { AppViewModel } from '../../contracts/generated/ViewModel/appViewModel';\nimport { LanguageViewModel } from '../../contracts/generated/ViewModel/languageViewModel';\nimport { TranslationKeySearchDropdownViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeySearchDropdownViewModel';\nimport { TranslationKeyViewModel } from '../../contracts/generated/ViewModel/Translation/translationKeyViewModel';\nimport { TranslationSearchViewModel } from '../../contracts/generated/ViewModel/Translation/translationSearchViewModel';\nimport { IDependencyInjection, withServices } from '../../integration/dependencyInjection';\nimport { appDetailsToAppDropDownMapper } from '../../mapper/appDetailsMapper';\nimport { languageDetailsToTranslationLanguageDropDownMapper } from '../../mapper/languageDetailsMapper';\nimport { AssistantAppsApiService } from '../../services/api/AssistantAppsApiService';\nimport { mapDispatchToProps, mapStateToProps } from './translation.redux';\nimport { TranslationPresenter } from './translationPresenter';\n\ninterface IWithDepInj {\n    assistantAppsApiService: AssistantAppsApiService;\n}\ninterface IWithoutDepInj { }\n\ninterface IFromRedux {\n    userGuid: string;\n}\n\ninterface IProps extends IWithDepInj, IWithoutDepInj, IFromRedux { }\n\ninterface IState {\n    status: NetworkState;\n    appStatus: NetworkState;\n    appDetails: Array<AppViewModel>;\n    langStatus: NetworkState;\n    langDetails: Array<LanguageViewModel>;\n    submissionStatus: NetworkState;\n\n    selectedApps: Array<string>;\n    selectedLanguage: string;\n\n    translationKeys: Array<TranslationKeyViewModel>;\n    translationKeyIndex: number;\n    translationKeyStatus: NetworkState;\n    translationKeyDropdown: Array<TranslationKeySearchDropdownViewModel>;\n    translationKeyDropdownStatus: NetworkState;\n}\n\nexport class TranslationContainerUnconnected extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            status: NetworkState.Success,\n            appStatus: NetworkState.Loading,\n            appDetails: [],\n            langStatus: NetworkState.Loading,\n            langDetails: [],\n            submissionStatus: NetworkState.Success,\n            selectedApps: [],\n            selectedLanguage: '',\n            translationKeys: [],\n            translationKeyIndex: 0,\n            translationKeyStatus: NetworkState.Pending,\n            translationKeyDropdown: [],\n            translationKeyDropdownStatus: NetworkState.Success,\n        };\n    }\n\n    componentDidMount() {\n        this.fetchAppData();\n        this.fetchLanguageData();\n    }\n\n    fetchAppData = async () => {\n        const appsResult = await this.props.assistantAppsApiService.getApps();\n        if (!appsResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    appStatus: NetworkState.Error\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                appDetails: appsResult.value,\n                appStatus: NetworkState.Success\n            }\n        });\n    }\n\n    fetchLanguageData = async () => {\n        var langResult = await this.props.assistantAppsApiService.getLanguages();\n        if (!langResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    langStatus: NetworkState.Error\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                langDetails: langResult.value,\n                langStatus: NetworkState.Success\n            }\n        });\n    }\n\n    fetchTranslationKeys = async (onlyUntranslated: boolean = false) => {\n        this.setState(() => {\n            return {\n                translationKeyStatus: NetworkState.Loading\n            }\n        });\n        var searchObj: TranslationSearchViewModel = {\n            appGuidList: this.state.selectedApps,\n            languageGuid: this.state.selectedLanguage,\n            showOnlyUntranslated: onlyUntranslated,\n        }\n        var transKeyResult = await this.props.assistantAppsApiService.getTranslationKeys(searchObj);\n        if (!transKeyResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    translationKeyStatus: NetworkState.Error,\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                translationKeys: transKeyResult.value,\n                translationKeyStatus: NetworkState.Success,\n                translationKeyIndex: 0,\n            }\n        });\n    }\n\n    fetchTranslationKeySearchDropdowns = async (onlyUntranslated: boolean = false) => {\n        this.setState(() => {\n            return {\n                translationKeyDropdownStatus: NetworkState.Loading\n            }\n        });\n        var searchObj: TranslationSearchViewModel = {\n            appGuidList: this.state.selectedApps,\n            languageGuid: this.state.selectedLanguage,\n            showOnlyUntranslated: onlyUntranslated,\n        }\n        var transKeySearchDropDownResult = await this.props.assistantAppsApiService.getTranslationKeysSearchDropdown(searchObj);\n        if (!transKeySearchDropDownResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    translationKeyDropdownStatus: NetworkState.Error,\n                }\n            });\n            return;\n        }\n        this.setState(() => {\n            return {\n                translationKeyDropdown: transKeySearchDropDownResult.value,\n                translationKeyDropdownStatus: NetworkState.Success,\n            }\n        });\n    }\n\n    setApps = (apps: Array<string>) => this.setState(() => { return { selectedApps: apps } });\n    setLanguage = (language: string) => this.setState(() => { return { selectedLanguage: language } });\n    setTranslationIndex = (newIndex: number) => this.setState(() => {\n        let actualPageNum: number = newIndex;\n        if (newIndex < 0) actualPageNum = 0;\n        if (newIndex > this.state.translationKeys.length) actualPageNum = (this.state.translationKeys.length - 1);\n        return { translationKeyIndex: +actualPageNum }\n    });\n\n    render() {\n        return (\n            <TranslationPresenter {...this.state}\n                appDropDowns={appDetailsToAppDropDownMapper(this.state.appDetails)}\n                langDropDowns={languageDetailsToTranslationLanguageDropDownMapper(this.state.langDetails)}\n                setApps={this.setApps}\n                setLanguage={this.setLanguage}\n                setTranslationIndex={this.setTranslationIndex}\n                fetchTranslationKeys={(ignoreLanguage?: boolean) => {\n                    this.fetchTranslationKeys(ignoreLanguage);\n                    this.fetchTranslationKeySearchDropdowns();\n                }}\n                userGuid={this.props.userGuid}\n            />\n        );\n    }\n};\n\nexport const TranslationContainer = withServices<IWithoutDepInj, IWithDepInj>(\n    connect(mapStateToProps, mapDispatchToProps)(TranslationContainerUnconnected),\n    (services: IDependencyInjection) => ({\n        assistantAppsApiService: services.assistantAppsApiService,\n    })\n);\n","import { DropDownWithIcon } from '../contracts/dropdown/dropDownWithIcon';\nimport { LanguageViewModel } from '../contracts/generated/ViewModel/languageViewModel';\nimport { getImageUrlFromCountryCode } from '../helper/countryCodeHelper';\n\nexport const languageDetailsToTranslationLanguageDropDownMapper = (appDetails: Array<LanguageViewModel>): Array<DropDownWithIcon> => {\n\n    return appDetails.filter((item: LanguageViewModel) => item.isVisible)\n        .map((item: LanguageViewModel) => {\n            return {\n                key: item.guid,\n                text: item.name,\n                value: item.guid,\n                image: { src: getImageUrlFromCountryCode(item.countryCode) },\n            };\n        });\n}\n\nexport const languageDetailsToGuideLanguageDropDownMapper = (appDetails: Array<LanguageViewModel>): Array<DropDownWithIcon> => {\n\n    return appDetails.map((item: LanguageViewModel) => {\n        return {\n            key: item.guid,\n            text: item.name,\n            value: item.languageCode,\n            image: { src: getImageUrlFromCountryCode(item.countryCode) },\n        };\n    });\n}","import { State } from '../../redux/state';\n\nimport { initTranslations, editTranslationItem } from '../../redux/modules/translation/action';\nimport { TranslationItem } from '../../redux/entities/translation/translationItem';\nimport { getTranslationItems } from '../../redux/modules/translation/selector';\nimport { getUserGuid } from '../../redux/modules/common/selector';\nimport { StorageService } from '../../services/StorageService';\nimport * as storageType from '../../constants/storageType';\n\nexport const mapStateToProps = (state: State) => {\n    let userGuidFromStorage = '';\n    const storageServ = new StorageService();\n    const userGuidFromStorageResult = storageServ.get<string>(storageType.userGuid);\n    if (userGuidFromStorageResult.isSuccess) userGuidFromStorage = userGuidFromStorageResult.value;\n    return {\n        translationItems: getTranslationItems(state),\n        userGuid: getUserGuid(state) || userGuidFromStorage,\n    };\n};\n\nexport const mapDispatchToProps = (dispatch: any) => {\n\n    let newProps: any = {};\n    newProps.initTranslations = (translationItems: TranslationItem[]) => {\n        dispatch(initTranslations(translationItems));\n    };\n    newProps.editTranslationItem = (translationItemKey: string, translationItem: TranslationItem) => {\n        dispatch(editTranslationItem(translationItemKey, translationItem));\n    };\n    return { ...newProps };\n}","import { INITTRANSLATIONS, EDITITEM } from \"./type\";\nimport { TranslationItem } from \"../../entities/translation/translationItem\";\n\nexport const initTranslations = (translationItems: Array<TranslationItem>) => {\n    return {\n        translationItems,\n        type: INITTRANSLATIONS,\n    }\n}\n\nexport const editTranslationItem = (translationItemKey: string, translationItem: TranslationItem) => {\n    return {\n        key: translationItemKey,\n        translationItem,\n        type: EDITITEM,\n    }\n}","const languageColourMap: any = {\n    'en': '#2E52B2',\n    'de': '#000000',\n    'pt-br': '#6DA544',\n    'ru': '#0052B4',\n    'es': '#FFDA44',\n    'pl': '#D80027',\n    'it': '#6DA544',\n    'fr': '#0052B4',\n    'tr': '#d80027',\n    'id': '#A2001D',\n    'hu': '#6DA544',\n    'cs': '#0052B4',\n    'zh-hans': '#D80027',\n    'ms': '#0052B4',\n    'nl': '#F79400',\n};\n\nexport const getColourFromLanguageCode = (langCode: string) => {\n    if (languageColourMap[langCode] != null) {\n        return languageColourMap[langCode];\n    }\n\n    return '#3ad7ec';\n}","import React from 'react';\nimport { getImageUrlFromCountryCode } from '../../../helper/countryCodeHelper';\n\nimport './tooltipWithFlag.scss';\n\ninterface IProps {\n    label: string;\n    payload: Array<any>\n}\n\nexport const TooltipWithFlag = (props: IProps | any) => {\n    return (\n        // <div className=\"tooltip\">\n        <div style={{ backgroundColor: '#E0E0E0', padding: '1em', borderRadius: '5px', textAlign: 'center' }}>\n            {\n                (props.payload && props.payload.length > 0 && props.payload[0].payload) &&\n                <>\n                    <p>{props.payload[0].payload.name}</p>\n                    <ul>\n                        <li>\n                            <img src={getImageUrlFromCountryCode(props.payload[0].payload.countryCode)} alt={props.payload[0].payload.countryCode} width=\"100\" />\n                        </li>\n                        <li className=\"pt-2\">\n                            <p><b>Complete:</b>&nbsp;{props.payload[0].payload.percentage} %</p>\n                        </li>\n                        <li>\n                            <p><b>Num. translations:</b>&nbsp;{props.payload[0].payload.numTranslations}</p>\n                        </li>\n                    </ul>\n                </>\n            }\n        </div>\n    );\n}","import React from 'react';\nimport { getImageUrlFromCountryCode } from '../../../helper/countryCodeHelper';\n\nexport class FlagAxisTick extends React.PureComponent<any> {\n    render() {\n        const {\n            x, y, payload,\n        } = this.props;\n\n        return (\n            <image x={x - 25} y={y - 3} href={getImageUrlFromCountryCode(payload.value)} width=\"50\" style={{ outline: '1px solid black' }} />\n        );\n    }\n}\n\nexport class SteppedAxisTick extends React.PureComponent<any> {\n    render() {\n        const {\n            x, y, payload,\n        } = this.props;\n\n        return (\n            <text x={x} y={y + ((payload.index % 2) ? 30 : 15)} textAnchor=\"middle\" fill=\"#666\">{payload.value}</text>\n        );\n    }\n}","import React from 'react';\nimport { Bar, BarChart, CartesianGrid, Cell, Label, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts';\nimport { Menu } from 'semantic-ui-react';\nimport { NetworkState } from '../../constants/networkState';\nimport { DropDownWithIcon } from '../../contracts/dropdown/dropDownWithIcon';\nimport { AppViewModel } from '../../contracts/generated/ViewModel/appViewModel';\nimport { TranslationGetGraphViewModel } from '../../contracts/generated/ViewModel/Translation/translationGetGraphViewModel';\nimport { TranslationsPerLanguageGraphViewModel } from '../../contracts/generated/ViewModel/Translation/translationsPerLanguageGraphViewModel';\nimport { IDependencyInjection, withServices } from '../../integration/dependencyInjection';\nimport { appDetailsToAppDropDownMapper } from '../../mapper/appDetailsMapper';\nimport { getColourFromLanguageCode } from '../../mapper/languageColourMapper';\nimport { AssistantAppsApiService } from '../../services/api/AssistantAppsApiService';\nimport { DropDown } from '../common/dropDown/dropDown';\nimport { TooltipWithFlag } from '../common/graph/tooltipWithFlag';\nimport { FlagAxisTick, SteppedAxisTick } from '../common/graph/xAxis';\nimport { SmallLoading } from '../common/loading';\n\ninterface IWithDepInj {\n    assistantAppsApiService: AssistantAppsApiService;\n}\ninterface IWithoutDepInj {\n}\n\ninterface IProps extends IWithDepInj, IWithoutDepInj { }\n\ninterface IState {\n    searchObj: TranslationGetGraphViewModel;\n    graphData: Array<TranslationsPerLanguageGraphViewModel>;\n    graphDataStatus: NetworkState;\n    tabPaneData: Array<any>;\n    isFlagMode: boolean;\n\n    appStatus: NetworkState;\n    appDropDowns: Array<DropDownWithIcon>;\n    selectedApps: Array<string>;\n}\n\nexport class NumberOfTranslationsPerLanguageGraphUnconnected extends React.Component<IProps, IState> {\n    constructor(props: IProps) {\n        super(props);\n\n        this.state = {\n            searchObj: { appGuidList: [] },\n            graphData: Array<TranslationsPerLanguageGraphViewModel>(),\n            graphDataStatus: NetworkState.Loading,\n            tabPaneData: [\n                { menuItem: 'Flags', isFlagMode: true },\n                { menuItem: 'Text', isFlagMode: false },\n            ],\n            isFlagMode: true,\n\n            appStatus: NetworkState.Loading,\n            appDropDowns: Array<DropDownWithIcon>(),\n            selectedApps: Array<string>(),\n        };\n    }\n\n    componentDidMount() {\n        this.fetchAppData();\n        this.fetchGraphData(this.state.searchObj);\n    }\n\n    fetchAppData = async () => {\n        var appsResult = await this.props.assistantAppsApiService.getApps();\n        if (!appsResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    appStatus: NetworkState.Error\n                }\n            });\n            return;\n        }\n\n        this.setState(() => {\n            return {\n                appDropDowns: appDetailsToAppDropDownMapper(appsResult.value),\n                selectedApps: appsResult.value.map((app: AppViewModel) => app.guid),\n                appStatus: NetworkState.Success\n            }\n        });\n    }\n\n    fetchGraphData = async (searchObj: TranslationGetGraphViewModel) => {\n        var appsResult = await this.props.assistantAppsApiService.getTranslationsPerLangGraphData(searchObj);\n        if (!appsResult.isSuccess) {\n            this.setState(() => {\n                return {\n                    graphDataStatus: NetworkState.Error\n                }\n            });\n            return;\n        }\n        const screenWidth = window.innerWidth;\n        let graphCols = 15;\n        if (screenWidth < 1000) {\n            graphCols = 10\n        }\n        if (screenWidth < 700) {\n            graphCols = 5\n        }\n        this.setState(() => {\n            return {\n                graphData: appsResult.value.slice(0, graphCols),\n                graphDataStatus: NetworkState.Success\n            }\n        });\n    }\n\n    setApps = (apps: Array<string>) => {\n        const newSearchObj: TranslationGetGraphViewModel = {\n            appGuidList: apps,\n        }\n        this.setState(() => {\n            return {\n                selectedApps: apps,\n                searchObj: newSearchObj,\n            }\n        });\n        this.fetchGraphData(newSearchObj);\n    }\n\n    changeMode = (isFlagMode: boolean) => {\n        this.setState(() => {\n            return {\n                isFlagMode\n            }\n        });\n    }\n\n    render() {\n        if (this.state.graphDataStatus === NetworkState.Loading) return <SmallLoading />\n        if (this.state.graphDataStatus === NetworkState.Error) return (\n            <p style={{ textAlign: 'center' }}>\n                <span aria-label=\"cross\" role=\"img\">❌</span>Error getting chart data\n            </p>\n        );\n\n        return (\n            <>\n                <div className=\"row justify-content-center pr-4 pb-2 pl-4\">\n                    <div className=\"col-12 col-lg-9 col-md-8 col-sm-7\">\n                        <label>Please select Apps to display data for</label>\n                        {\n                            (this.state.appStatus !== NetworkState.Error)\n                                ? <DropDown\n                                    placeholder=\"Select Apps\"\n                                    options={this.state.appDropDowns}\n                                    multiple={true}\n                                    defaultValue={this.state.selectedApps}\n                                    isLoading={this.state.appStatus === NetworkState.Loading}\n                                    onChange={(apps: any) => this.setApps(apps)}\n                                />\n                                : <p>Error loading apps, please refresh the page or contact us</p>\n                        }\n                    </div>\n                    <div className=\"col-12 col-lg-2 col-md-3 col-sm-4 ta-center col-sm-pt1\">\n                        <label>Chart mode</label><br />\n                        <Menu compact>\n                            {\n                                this.state.tabPaneData.map((data: any) => {\n                                    return (\n                                        <Menu.Item link\n                                            key={data.menuItem}\n                                            active={data.isFlagMode === this.state.isFlagMode}\n                                            onClick={() => this.changeMode(data.isFlagMode)}>\n                                            {data.menuItem}\n                                        </Menu.Item>\n                                    );\n                                })\n                            }\n                        </Menu>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <ResponsiveContainer width=\"100%\" height={500} className=\"m-4 unset-width\">\n                            <BarChart\n                                data={this.state.graphData}\n                                margin={{ top: 0, right: 50, left: 20, bottom: 30 }}\n                            >\n                                <CartesianGrid strokeDasharray=\"3 3\" />\n                                <XAxis height={40}\n                                    interval={0}\n                                    dataKey={this.state.isFlagMode ? \"countryCode\" : \"name\"}\n                                    tick={this.state.isFlagMode ? <FlagAxisTick /> : <SteppedAxisTick />}>\n                                    <Label value=\"Supported Languages\" offset={15} position=\"bottom\"\n                                        fontSize={14}\n                                        fill='#676767' />\n                                </XAxis>\n                                <YAxis>\n                                    <Label value=\"Percentage Complete\" offset={0} position=\"left\"\n                                        angle={-90}\n                                        fontSize={14}\n                                        fill='#676767' />\n                                </YAxis>\n                                <Tooltip content={<TooltipWithFlag />} />\n                                <Bar dataKey=\"percentage\" name=\"Percentage\" fill=\"#3ad7ec\">\n                                    {\n                                        this.state.graphData.map((entry: TranslationsPerLanguageGraphViewModel, index) => (\n                                            <Cell\n                                                key={`cell-${entry.guid}`}\n                                                fill={getColourFromLanguageCode(this.state.graphData[index].languageCode)}\n                                            >\n                                            </Cell>\n                                        ))\n                                    }\n                                </Bar>\n                            </BarChart>\n                        </ResponsiveContainer>\n                    </div>\n                </div>\n            </>\n        );\n    }\n}\n\nexport const NumberOfTranslationsPerLanguageGraph = withServices<IWithoutDepInj, IWithDepInj>(\n    NumberOfTranslationsPerLanguageGraphUnconnected,\n    (services: IDependencyInjection) => ({\n        assistantAppsApiService: services.assistantAppsApiService,\n    })\n);","/* Auto Generated */\n\nexport enum AdminApprovalStatus {\n    pending,\n    inReview,\n    denied,\n    approved,\n    cancelled,\n}\n","import React from 'react';\nimport { Segment } from 'semantic-ui-react';\n\nimport { SmallBanner } from '../../components/common/banner/banner';\nimport { SmallLoading } from '../../components/common/loading';\nimport { NumberOfTranslationsPerLanguageGraph } from '../../components/translationGraphs/numberOfTranslationsPerLanguage';\n\nexport const StatisticsPresenter: React.FC = () => {\n    return (\n        <>\n            <SmallBanner\n                title=\"Statistics\"\n                descrip=\"Public stats of the Assistant Apps\"\n            />\n            <section className=\"p1\">\n                <Segment raised>\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-12\">\n                            <h1 className=\"pt-2 pb1 mb-0 ta-center\">Translations submitted per Language</h1>\n                            <NumberOfTranslationsPerLanguageGraph />\n                        </div>\n                    </div>\n                </Segment>\n                <br />\n                <Segment raised style={{ overflow: 'hidden' }}>\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-12\">\n                            <h1 className=\"pt-2 pb1 mb-0 ta-center\">Top Translators</h1>\n                            <assistant-apps-translation-leaderboard>\n                                <div slot=\"loading\">\n                                    <SmallLoading />\n                                </div>\n                            </assistant-apps-translation-leaderboard>\n                            <br />\n                            <br />\n                        </div>\n                    </div>\n                </Segment>\n            </section>\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport React, { ReactNode } from 'react';\nimport { Card, Icon, Label } from 'semantic-ui-react';\nimport { AdminApprovalStatus } from '../../contracts/generated/Enum/adminApprovalStatus';\nimport { GuideSearchResultViewModel } from '../../contracts/generated/ViewModel/Guide/guideSearchResultViewModel';\nimport { friendlyDate } from '../../helper/dateHelper';\n\ninterface IUserGuideTileProps {\n    item: GuideSearchResultViewModel;\n    onDeleteClick?: () => void;\n    onClick?: () => void;\n}\nexport const UserGuideTile: React.FC<IUserGuideTileProps> = (props: IUserGuideTileProps) => {\n    const deleteClick = (e: any) => {\n        e?.preventDefault?.();\n        props?.onDeleteClick?.();\n    }\n    return (\n        <div className=\"col-3 col-xl-3 col-lg-3 col-md-4 col-sm-6 col-xs-12 mb3\">\n            <Card className=\"guide\">\n                {/* <Image src={props.} wrapped ui={false} /> */}\n                <Card.Content className=\"pointer pos-rel\" onClick={props.onClick}>\n                    <Card.Header>\n                        {props.item.title}\n                        <Icon name=\"pencil\" className=\"pos-abs top-right\" />\n                    </Card.Header>\n                    <Card.Meta>{friendlyDate(props.item.dateCreated)}</Card.Meta>\n                    <Card.Description><b>Subtitle: </b>{props.item.subTitle}</Card.Description>\n                    <Card.Description><b>Tags: </b>{props.item.tags.join(', ')}</Card.Description>\n                </Card.Content>\n                <Card.Content className=\"pointer\" extra onClick={props.onClick}>\n                    {\n                        (props.item.version < 1)\n                            ? <Card.Description><b>Version: </b>Original</Card.Description>\n                            : <Card.Description><b>Version: </b>{props.item.version}</Card.Description>\n                    }\n                    <UserGuideStatus status={props.item.status} />\n                </Card.Content>\n                <Card.Content extra>\n                    <Label color='red' className=\"pointer\" onClick={deleteClick}>\n                        <Icon name=\"trash\" />Delete\n                    </Label>\n                </Card.Content>\n            </Card>\n        </div>\n    );\n}\n\ninterface ICreateUserGuideTileProps {\n    onClick?: () => void;\n}\nexport const CreateUserGuideTile: React.FC<ICreateUserGuideTileProps> = (props: ICreateUserGuideTileProps) => {\n    return (\n        <BaseUserGuideTile\n            headerContent={(\n                <div style={{ textAlign: 'center' }}>\n                    <Icon name='plus' size='huge' />\n                </div>\n            )}\n            bodyContent={(<h3>Create new Guide</h3>)}\n            onClick={props.onClick}\n        />\n    );\n}\n\ninterface IBaseUserGuideTileProps {\n    headerContent: ReactNode;\n    bodyContent: ReactNode;\n    onClick?: () => void;\n}\nconst BaseUserGuideTile: React.FC<IBaseUserGuideTileProps> = (props: IBaseUserGuideTileProps) => {\n    return (\n        <div className=\"col-3 col-xl-3 col-lg-3 col-md-4 col-sm-6 col-xs-12\">\n            <div className=\"card guide pointer\" onClick={props.onClick}>\n                <div className=\"card-header\">\n                    {props.headerContent}\n                </div>\n                <div className=\"card-body\">\n                    {props.bodyContent}\n                </div>\n            </div>\n        </div>\n    );\n}\n\ninterface IUserGuideStatusProps {\n    status: AdminApprovalStatus;\n}\nconst UserGuideStatus: React.FC<IUserGuideStatusProps> = (props: IUserGuideStatusProps) => {\n    // let statusFriendly = 'Unknown';\n    // if (AdminApprovalStatus.approved) statusFriendly = 'Approved ✔';\n    // if (AdminApprovalStatus.cancelled) statusFriendly = 'Cancelled ✔';\n    // if (AdminApprovalStatus.denied) statusFriendly = 'Denied ✔';\n    // if (AdminApprovalStatus.inReview) statusFriendly = 'InReview ✔';\n    // if (AdminApprovalStatus.pending) statusFriendly = 'Pending ✔';\n    const statusFriendly = AdminApprovalStatus[props.status].toString();\n    return (\n        <Card.Description className={classNames('guide-status', statusFriendly)}>\n            <b>Status: </b>\n            <span>{statusFriendly}</span>\n        </Card.Description>\n    );\n}","import { State } from '../../redux/state';\nimport { getUserGuid } from '../../redux/modules/common/selector';\n\nexport const mapStateToProps = (state: State) => {\n    console.warn(getUserGuid(state), state);\n    return {\n        userGuid: getUserGuid(state),\n    };\n};\n\n// export const mapDispatchToProps = (dispatch: any) => {\n\n//     let newProps: any = {};\n//     newProps.setLoadingStatus = (isLoading: boolean) => {\n//         dispatch(setLoadingStatus(isLoading));\n//     };\n//     newProps.login = (loginData: ILoginProps) => {\n//         dispatch(login(loginData));\n//     };\n//     newProps.logout = () => {\n//         dispatch(logout());\n//     };\n//     return { ...newProps };\n// }","import React, { useContext, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { SmallBanner } from '../../components/common/banner/banner';\nimport { Error } from '../../components/common/error';\nimport { Loading, SmallLoading } from '../../components/common/loading';\nimport { LoginRequired } from '../../components/common/loginRequired';\nimport { CreateUserGuideTile, UserGuideTile } from '../../components/guide/userGuideTile';\nimport { NetworkState } from '../../constants/networkState';\nimport { createGuide, editGuide, editGuideParam } from '../../constants/route';\nimport { GuideSearchResultViewModel } from '../../contracts/generated/ViewModel/Guide/guideSearchResultViewModel';\nimport { PaginationWithValue } from '../../contracts/pagination/paginationWithValue';\nimport { anyObject } from '../../helper/typescriptHacks';\nimport { DependencyInjectionContext } from '../../integration/dependencyInjection';\nimport { mapStateToProps } from './guidListPage.Redux';\n\ninterface IFromRedux {\n    userGuid: string;\n}\n\ninterface IProps extends IFromRedux { }\n\nexport const GuideListPageUnconnected: React.FC<IProps> = (props: IProps) => {\n    const history = useHistory();\n    const services = useContext(DependencyInjectionContext);\n    const [fetchStatus, setFetchStatus] = useState<NetworkState>(NetworkState.Pending);\n    const [guidePagination, setGuidePagination] = useState<PaginationWithValue<Array<GuideSearchResultViewModel>>>(anyObject);\n\n    useEffect(() => {\n        const isNotLoggedIn = props.userGuid == null || props.userGuid.length < 1;\n        if (isNotLoggedIn) return;\n        fetchUserGuides();\n        // eslint-disable-next-line\n    }, [props.userGuid])\n\n    const fetchUserGuides = async () => {\n        const searchParams: any = {\n            page: 1,\n        }\n        const guidesResult = await services.assistantAppsApiService.getGuidesForUser(searchParams);\n        if (guidesResult.isSuccess === false) {\n            setFetchStatus(NetworkState.Error);\n            return;\n        }\n        setGuidePagination(guidesResult.value);\n        setFetchStatus(NetworkState.Success);\n    }\n\n    const banner = (\n        <SmallBanner\n            title=\"Guides\"\n            descrip=\"Tool for creating and editing Guides for the the Assistant Apps\"\n        />\n    );\n    const isNotLoggedIn = props.userGuid == null || props.userGuid.length < 1;\n    if (isNotLoggedIn) {\n        return (\n            <>\n                {banner}\n                <div className=\"container\">\n                    <div className=\"row full pt3 pb3\">\n                        <LoginRequired />\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    const renderPageContent = () => {\n        if (fetchStatus === NetworkState.Error) return <Error message=\"Something went wrong\" />;\n        if (fetchStatus === NetworkState.Loading) return <SmallLoading />;\n\n        return (\n            <>\n                {\n                    (guidePagination?.value ?? []).map((guide: GuideSearchResultViewModel) => (\n                        <UserGuideTile\n                            key={guide.guid}\n                            item={{ ...guide }}\n                            onDeleteClick={async () => {\n                                setFetchStatus(NetworkState.Loading);\n                                await services.assistantAppsApiService.deleteGuide(guide.guid);\n                                fetchUserGuides();\n                            }}\n                            onClick={() => {\n                                history.push(\n                                    editGuide.replace(editGuideParam, guide.guid)\n                                );\n                            }}\n                        />\n                    ))\n                }\n                <CreateUserGuideTile onClick={() => {\n                    history.push(createGuide);\n                }} />\n            </>\n        );\n    }\n\n    return (\n        <div className=\"guide-page\">\n            {banner}\n            <div className=\"container\">\n                <div className=\"row full pt3 pb3\">\n                    {renderPageContent()}\n                </div>\n            </div>\n            {\n                (fetchStatus === NetworkState.Loading) && <Loading />\n            }\n        </div>\n    );\n};\n\nexport const GuideListPage = connect(mapStateToProps)(GuideListPageUnconnected);\n","/* Auto Generated */\n\nexport enum GuideSectionItemType {\n    text,\n    link,\n    image,\n    markdown,\n    table,\n}\n","import React, { ReactNode } from 'react';\nimport Modal from 'react-modal';\n\nconst customStyles = {\n    content: {\n        top: '50%',\n        left: '50%',\n        right: 'auto',\n        bottom: 'auto',\n        marginRight: '-50%',\n        transform: 'translate(-50%, -50%)',\n    },\n};\n\nexport const modalSetup = (appId: string) => {\n    Modal.setAppElement(`#${appId}`);\n}\n\ninterface IBaseDialogProps {\n    isOpen: boolean;\n    children: ReactNode;\n    closeModal: () => void;\n}\n\nexport const BaseDialog: React.FC<IBaseDialogProps> = (props: IBaseDialogProps) => {\n    return (\n        <Modal\n            isOpen={props.isOpen}\n            onRequestClose={props.closeModal}\n            style={customStyles}\n        >\n            {props.children}\n        </Modal>\n    );\n}","import React from 'react';\nimport ReactTagInput from '@pathofdev/react-tag-input';\n\ninterface ITagsFormInputProps {\n    existingTags: Array<string>;\n    setTags: (newTags: Array<string>) => void;\n}\n\nexport const TagsFormInput: React.FC<ITagsFormInputProps> = (props: ITagsFormInputProps) => {\n    return (\n        <ReactTagInput\n            tags={props.existingTags}\n            onChange={props.setTags}\n        />\n    );\n}","import React from 'react';\nimport { Card, Image } from 'semantic-ui-react';\n\ninterface IAddSection {\n    onClick: () => void;\n}\nexport const AddTextSection: React.FC<IAddSection> = (props: IAddSection) =>\n    <BaseAddSection imgUrl=\"textItem.png\" text=\"Text\" onClick={props.onClick} />\nexport const AddLinkSection: React.FC<IAddSection> = (props: IAddSection) =>\n    <BaseAddSection imgUrl=\"linkItem.png\" text=\"Link\" onClick={props.onClick} />\nexport const AddImageSection: React.FC<IAddSection> = (props: IAddSection) =>\n    <BaseAddSection imgUrl=\"imageItem.png\" text=\"Image\" onClick={props.onClick} />\nexport const AddMarkdownSection: React.FC<IAddSection> = (props: IAddSection) =>\n    <BaseAddSection imgUrl=\"textItem.png\" text=\"Markdown\" onClick={props.onClick} />\n\ninterface IBaseAddSectionProps {\n    imgUrl: string;\n    text: string;\n    onClick: () => void;\n}\nconst BaseAddSection: React.FC<IBaseAddSectionProps> = (props: IBaseAddSectionProps) => {\n    return (\n        <div className=\"guide-add-item col-3 col-xl-3 col-lg-4 col-md-6 col-sm-6 col-xs-6\" onClick={props.onClick}>\n            <Card>\n                <Image src={`/assets/img/guide/${props.imgUrl}`} wrapped ui={false} />\n                <Card.Content>\n                    <Card.Header>{props.text}</Card.Header>\n                </Card.Content>\n            </Card>\n        </div>\n    );\n}","// tslint:disable-next-line:no-bitwise\nexport const guidBlock = () => (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n\nexport const newGuid = () => (\n    guidBlock() + guidBlock() + '-' +\n    guidBlock() + '-' +\n    guidBlock() + '-' +\n    guidBlock() + '-' +\n    guidBlock() + guidBlock() + guidBlock()\n).toLowerCase();\n","import React from 'react';\nimport Markdown from 'markdown-to-jsx';\n\ninterface IProps {\n    markdown: string;\n}\n\nexport const MarkdownRenderer: React.FC<IProps> = (props: IProps) => {\n    return (\n        <Markdown>\n            {props.markdown}\n        </Markdown>\n    );\n}","\nimport * as React from 'react';\nimport { ILazyLoadImageProps } from './ILazyLoadImageProps';\nimport * as ReactLazy from 'react-lazy-load-image-component';\n\ninterface IState {\n    imageNotFound: boolean\n}\n\nexport class LazyLoadImage extends React.Component<ILazyLoadImageProps, IState> {\n    constructor(props: ILazyLoadImageProps) {\n        super(props);\n\n        this.state = {\n            imageNotFound: false\n        }\n    }\n\n    errorLoadingImage = () => {\n        this.setState({\n            imageNotFound: true\n        })\n    }\n\n    render() {\n        const { src, notFoundImageSrc, effect, ...unused } = this.props;\n        const notFoundImageSource = notFoundImageSrc || '/assets/img/unknown.png';\n        const imageSource = (src && src.length > 5) ? src : notFoundImageSrc;\n        return (\n            <ReactLazy.LazyLoadImage\n                placeholderSrc={'/assets/img/loader.svg'}\n                src={this.state.imageNotFound ? notFoundImageSource : imageSource}\n                title={this.props.title ? this.props.title : this.props.alt}\n                height={this.props.height}\n                effect={this.props.effect ? this.props.effect : 'blur'}\n                onError={this.errorLoadingImage}\n                draggable={false}\n                {...unused}\n            />\n        );\n    }\n\n}","import React, { useState } from 'react';\nimport { Form, Icon, Label } from 'semantic-ui-react';\nimport { GuideSectionItemType } from '../../contracts/generated/Enum/guideSectionItemType';\nimport { GuideSectionItemViewModel } from '../../contracts/generated/ViewModel/Guide/guideSectionItemViewModel';\nimport { MarkdownRenderer } from '../../components/common/markdown';\nimport { LazyLoadImage } from '../../components/common/lazyLoadImage/lazyLoadImage';\n\ninterface ISectionItemProps {\n    index: number;\n    totalLength: number;\n    item: GuideSectionItemViewModel;\n    saveItem: (sectionItemId: string, name: string, value: string) => void;\n    moveItem: (sectionItemId: string, moveDown: boolean) => void;\n    deleteItem: (sectionItemId: string) => void;\n}\n\nexport const SectionItem: React.FC<ISectionItemProps> = (props: ISectionItemProps) => {\n\n    const renderContents = (item: GuideSectionItemViewModel) => {\n        switch (item.type) {\n            case GuideSectionItemType.text:\n                return <TextSectionItemContent {...props} />\n            case GuideSectionItemType.image:\n                return <ImageSectionItemContent {...props} />\n            case GuideSectionItemType.link:\n                return <LinkSectionItemContent {...props} />\n            case GuideSectionItemType.markdown:\n                return <MarkdownSectionItemContent {...props} />\n        }\n        return (<span></span>);\n    }\n\n    return (\n        <div className=\"guide-item card mt-3 noselect\">\n            <div className=\"card-header\">\n                <Form>\n                    {renderContents(props.item)}\n                </Form>\n\n                <ActionButtons\n                    index={props.index}\n                    itemSpecificName=\"item\"\n                    totalLength={props.totalLength}\n                    saveItem={(name: string, value: string) => props.saveItem(props.item.guid, name, value)}\n                    moveItem={(moveDown: boolean) => props.moveItem(props.item.guid, moveDown)}\n                    deleteItem={() => props.deleteItem(props.item.guid)}\n                />\n            </div>\n        </div>\n    );\n}\n\ninterface IActionButtonsProps {\n    index: number;\n    totalLength: number;\n    itemSpecificName: string;\n    additionalClassName?: string;\n    saveItem: (name: string, value: string) => void;\n    moveItem: (moveDown: boolean) => void;\n    deleteItem: () => void;\n}\nexport const ActionButtons: React.FC<IActionButtonsProps> = (props: IActionButtonsProps) => {\n    return (\n        <div className={`action-buttons ${props.additionalClassName}`}>\n            {\n                (props.index > 0) &&\n                <Label color='blue' className=\"pointer\" onClick={() => props.moveItem(false)}>\n                    <Icon name=\"arrow up\" />Move {props.itemSpecificName} up\n                </Label>\n            }\n            {\n                (props.index < (props.totalLength - 1)) &&\n                <Label color='blue' className=\"pointer\" onClick={() => props.moveItem(true)}>\n                    <Icon name=\"arrow down\" />Move {props.itemSpecificName} down\n                </Label>\n            }\n\n            <Label color='red' className=\"pointer\" onClick={props.deleteItem}>\n                <Icon name=\"trash\" />Delete {props.itemSpecificName}\n            </Label>\n        </div>\n\n    );\n}\n\nconst handleBlurEvent = (e: any) => {\n    e?.persist?.();\n    const value = e?.target?.value ?? '';\n    return value;\n}\n\nexport const TextSectionItemContent: React.FC<ISectionItemProps> = (props: ISectionItemProps) => {\n    return (\n        <Form.Group>\n            <Form.Field width=\"16\">\n                <label>Text</label>\n                <textarea placeholder='How to...'\n                    defaultValue={props.item.content}\n                    autoFocus={(props.item as any).isNew}\n                    onBlur={(e: any) => {\n                        const value = handleBlurEvent(e);\n                        props.saveItem(props.item.guid, 'content', value);\n                    }} />\n            </Form.Field>\n        </Form.Group>\n    );\n}\n\nexport const LinkSectionItemContent: React.FC<ISectionItemProps> = (props: ISectionItemProps) => {\n    return (\n        <Form.Group>\n            <Form.Field width=\"6\">\n                <label>Name</label>\n                <div className=\"ui input\">\n                    <input placeholder=\"Click here\" type=\"text\"\n                        defaultValue={props.item.content}\n                        autoFocus={(props.item as any).isNew}\n                        onBlur={(e: any) => {\n                            const value = handleBlurEvent(e);\n                            props.saveItem(props.item.guid, 'content', value);\n                        }}\n                    />\n                </div>\n            </Form.Field>\n            <Form.Field width=\"10\">\n                <label>Url</label>\n                <div className=\"ui input\">\n                    <input placeholder=\"https://google.com\" type=\"text\"\n                        defaultValue={props.item.additionalContent}\n                        onBlur={(e: any) => {\n                            const value = handleBlurEvent(e);\n                            props.saveItem(props.item.guid, 'additionalContent', value);\n                        }}\n                    />\n                </div>\n            </Form.Field>\n        </Form.Group>\n    );\n}\n\nexport const ImageSectionItemContent: React.FC<ISectionItemProps> = (props: ISectionItemProps) => {\n    return (\n        <>\n            <Form.Group>\n                <Form.Field width=\"16\">\n                    <label>Url</label>\n                    <input placeholder=\"https://imgur.com\" type=\"text\"\n                        defaultValue={props.item.content}\n                        autoFocus={(props.item as any).isNew}\n                        onChange={(e: any) => {\n                            const value = handleBlurEvent(e);\n                            props.saveItem(props.item.guid, 'content', value);\n                        }}\n                    />\n                </Form.Field>\n            </Form.Group>\n            <Form.Group>\n                <Form.Field width=\"16\" className=\"guide-item-img-url\">\n                    <LazyLoadImage\n                        key={props.item.content}\n                        src={props.item.content}\n                        alt={props.item.guid}\n                    />\n                </Form.Field>\n            </Form.Group>\n        </>\n    );\n}\n\nexport const MarkdownSectionItemContent: React.FC<ISectionItemProps> = (props: ISectionItemProps) => {\n    const [localMarkdown, setLocalMarkdown] = useState<string>(props.item.content);\n\n    return (\n        <Form.Group>\n            <Form.Field width=\"8\">\n                <label>Markdown</label>\n                <textarea placeholder='How to...'\n                    defaultValue={props.item.content}\n                    autoFocus={(props.item as any).isNew}\n                    onBlur={(e: any) => {\n                        props.saveItem(props.item.guid, 'content', localMarkdown);\n                    }}\n                    onChange={(e: any) => {\n                        const value = handleBlurEvent(e);\n                        setLocalMarkdown(value);\n                    }}\n                />\n            </Form.Field>\n            <Form.Field width=\"8\">\n                <div style={{ paddingTop: '1.5em' }}>\n                    <MarkdownRenderer markdown={localMarkdown} />\n                </div>\n            </Form.Field>\n        </Form.Group>\n    );\n}","import React, { } from 'react';\nimport { AddOrEditGuideViewModel } from '../../contracts/generated/ViewModel/Guide/addOrEditGuideViewModel';\nimport { GuideSectionItemViewModel } from '../../contracts/generated/ViewModel/Guide/guideSectionItemViewModel';\nimport { GuideSectionViewModel } from '../../contracts/generated/ViewModel/Guide/guideSectionViewModel';\nimport { SectionItem } from './guideComponents';\n\n\ninterface IProps {\n    addGuideObj: AddOrEditGuideViewModel;\n    section: GuideSectionViewModel;\n    setAddGuideObj: (vm: AddOrEditGuideViewModel) => void;\n}\n\nexport const CreateGuideSectionItems: React.FC<IProps> = (props: IProps) => {\n    const {\n        addGuideObj,\n        section,\n        setAddGuideObj,\n    } = props;\n\n    const editSectionItemDetails = (sectionId: string) => async (sectionItemId: string, name: string, value: string) => {\n        if (sectionId == null || sectionId.length < 1) return;\n        if (sectionItemId == null || sectionItemId.length < 1) return;\n\n        const selectedSectionIndex = addGuideObj.sections\n            .findIndex((sec: GuideSectionViewModel) => sec.guid === sectionId);\n        if (selectedSectionIndex < 0) return;\n\n        const selectedSection: GuideSectionViewModel = addGuideObj.sections[selectedSectionIndex];\n        if (selectedSection == null) return;\n\n        const selectedItemIndex = selectedSection.items\n            .findIndex((secItem: GuideSectionItemViewModel) => secItem.guid === sectionItemId);\n        if (selectedItemIndex < 0) return;\n\n        const selectedItem: GuideSectionItemViewModel = selectedSection.items[selectedItemIndex];\n        if (selectedItem == null) return;\n\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...addGuideObj.sections.slice(0, selectedSectionIndex),\n                {\n                    ...selectedSection, items: [\n                        ...selectedSection.items.slice(0, selectedItemIndex),\n                        { ...selectedItem, [name]: value, isNew: false, },\n                        ...selectedSection.items.slice(selectedItemIndex + 1)\n                    ]\n                },\n                ...addGuideObj.sections.slice(selectedSectionIndex + 1)\n            ],\n        });\n    }\n\n    const moveSectionItem = (sectionId: string) => (sectionItemId: string, moveDown: boolean) => {\n        if (sectionId == null || sectionId.length < 1) return;\n        if (sectionItemId == null || sectionItemId.length < 1) return;\n\n        const selectedSectionIndex = addGuideObj.sections\n            .findIndex((sec: GuideSectionViewModel) => sec.guid === sectionId);\n        if (selectedSectionIndex < 0) return;\n\n        const selectedSection: GuideSectionViewModel = addGuideObj.sections[selectedSectionIndex];\n        if (selectedSection == null) return;\n\n        const selectedItemIndex = selectedSection.items\n            .findIndex((secItem: GuideSectionItemViewModel) => secItem.guid === sectionItemId);\n        if (selectedItemIndex < 0) return;\n\n        const selectedItem: GuideSectionItemViewModel = selectedSection.items[selectedItemIndex];\n        if (selectedItem == null) return;\n\n        const swapIndex = moveDown ? (selectedItemIndex + 1) : (selectedItemIndex - 1);\n        const tempItems = [...selectedSection.items];\n        const tempItem = { ...tempItems[selectedItemIndex] };\n        tempItems[selectedItemIndex] = { ...tempItems[swapIndex], sortOrder: tempItem.sortOrder };\n        tempItems[swapIndex] = { ...tempItem, sortOrder: tempItems[swapIndex].sortOrder };\n\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...addGuideObj.sections.slice(0, selectedSectionIndex),\n                {\n                    ...selectedSection, items: [\n                        ...tempItems\n                    ]\n                },\n                ...addGuideObj.sections.slice(selectedSectionIndex + 1)\n            ],\n        });\n    }\n\n    const deleteSectionItem = (sectionId: string) => (sectionItemId: string) => {\n        if (sectionId == null || sectionId.length < 1) return;\n        if (sectionItemId == null || sectionItemId.length < 1) return;\n\n        const selectedSectionIndex = addGuideObj.sections\n            .findIndex((sec: GuideSectionViewModel) => sec.guid === sectionId);\n        if (selectedSectionIndex < 0) return;\n\n        const selectedSection: GuideSectionViewModel = addGuideObj.sections[selectedSectionIndex];\n        if (selectedSection == null) return;\n\n        const selectedItemIndex = selectedSection.items\n            .findIndex((secItem: GuideSectionItemViewModel) => secItem.guid === sectionItemId);\n        if (selectedItemIndex < 0) return;\n\n        const selectedItem: GuideSectionItemViewModel = selectedSection.items[selectedItemIndex];\n        if (selectedItem == null) return;\n\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...addGuideObj.sections.slice(0, selectedSectionIndex),\n                {\n                    ...selectedSection, items: [\n                        ...selectedSection.items.slice(0, selectedItemIndex),\n                        ...selectedSection.items.slice(selectedItemIndex + 1)\n                    ]\n                },\n                ...addGuideObj.sections.slice(selectedSectionIndex + 1)\n            ],\n        });\n    }\n\n\n    const renderSectionItems = (sectionId: string, sectionItems: Array<GuideSectionItemViewModel>) => {\n        const orderedSectionItems = (sectionItems ?? []).sort((a: GuideSectionItemViewModel, b: GuideSectionItemViewModel) => a.sortOrder - b.sortOrder);\n        return (\n            <>\n                {\n                    orderedSectionItems.map((sectionItem: GuideSectionItemViewModel, index: number) => (\n                        <div key={`container-${sectionItem.guid}-${index}`} className=\"col-12 pt1\">\n                            <SectionItem\n                                key={`${sectionItem.guid}-${index}`}\n                                index={index}\n                                totalLength={orderedSectionItems.length}\n                                item={sectionItem}\n                                saveItem={editSectionItemDetails(sectionId)}\n                                moveItem={moveSectionItem(sectionId)}\n                                deleteItem={deleteSectionItem(sectionId)}\n                            />\n                        </div>\n                    ))\n                }\n            </>\n        );\n    }\n\n    const items = section.items ?? [];\n    if (items.length < 1) {\n        return (\n            <div className=\"row full pb2\">\n                <div className=\"col-12\">\n                    <h3 className=\"ta-center pt1\">No items added yet</h3>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"row\">\n            {renderSectionItems(section.guid, items)}\n        </div>\n    );\n};\n","import React, { } from 'react';\nimport { Icon, Popup } from 'semantic-ui-react';\nimport { AddOrEditGuideViewModel } from '../../contracts/generated/ViewModel/Guide/addOrEditGuideViewModel';\nimport { GuideSectionViewModel } from '../../contracts/generated/ViewModel/Guide/guideSectionViewModel';\nimport { getStringDialog } from '../../helper/dialogHelper';\nimport { CreateGuideSectionItems } from './createGuideSectionItems';\nimport { ActionButtons } from './guideComponents';\n\ninterface IProps {\n    addGuideObj: AddOrEditGuideViewModel;\n    setAddGuideObj: (vm: AddOrEditGuideViewModel) => void;\n    addSection: () => void;\n    setSelectedSectionGuid: (guid: string) => void;\n}\n\nexport const CreateGuideSections: React.FC<IProps> = (props: IProps) => {\n    const {\n        addGuideObj,\n        setAddGuideObj,\n        addSection,\n        setSelectedSectionGuid,\n    } = props;\n\n    const editSectionHeading = (sectionId: string) => async () => {\n        if (sectionId == null || sectionId.length < 1) return;\n\n        const selectedItemIndex = addGuideObj.sections\n            .findIndex((sec: GuideSectionViewModel) => sec.guid === sectionId);\n        if (selectedItemIndex < 0) return;\n\n        const selectedItem: GuideSectionViewModel = addGuideObj.sections[selectedItemIndex];\n        if (selectedItem == null) return;\n\n        const newHeading = await getStringDialog('New Section heading', selectedItem.heading);\n        if (newHeading == null || newHeading.length < 1) return;\n\n        const editFunc = editSectionDetails(sectionId)\n        editFunc('heading', newHeading);\n    }\n\n    const editSectionDetails = (sectionId: string) => async (name: string, value: string) => {\n        if (sectionId == null || sectionId.length < 1) return;\n\n        const selectedSectionIndex = addGuideObj.sections\n            .findIndex((sec: GuideSectionViewModel) => sec.guid === sectionId);\n        if (selectedSectionIndex < 0) return;\n\n        const selectedSection: GuideSectionViewModel = addGuideObj.sections[selectedSectionIndex];\n        if (selectedSection == null) return;\n\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...addGuideObj.sections.slice(0, selectedSectionIndex),\n                { ...selectedSection, [name]: value },\n                ...addGuideObj.sections.slice(selectedSectionIndex + 1)\n            ],\n        });\n    }\n\n    const moveSection = (sectionId: string) => (moveDown: boolean) => {\n        if (sectionId == null || sectionId.length < 1) return;\n\n        const selectedSectionIndex = addGuideObj.sections\n            .findIndex((sec: GuideSectionViewModel) => sec.guid === sectionId);\n        if (selectedSectionIndex < 0) return;\n\n        const swapIndex = moveDown ? (selectedSectionIndex + 1) : (selectedSectionIndex - 1);\n        const tempItems = [...addGuideObj.sections];\n        const tempItem = { ...tempItems[selectedSectionIndex] };\n        tempItems[selectedSectionIndex] = { ...tempItems[swapIndex], sortOrder: tempItem.sortOrder };\n        tempItems[swapIndex] = { ...tempItem, sortOrder: tempItems[swapIndex].sortOrder };\n\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...tempItems,\n            ],\n        });\n    }\n\n    const deleteSection = (sectionId: string) => () => {\n        if (sectionId == null || sectionId.length < 1) return;\n\n        const selectedSectionIndex = addGuideObj.sections\n            .findIndex((sec: GuideSectionViewModel) => sec.guid === sectionId);\n        if (selectedSectionIndex < 0) return;\n\n        const selectedSection: GuideSectionViewModel = addGuideObj.sections[selectedSectionIndex];\n        if (selectedSection == null) return;\n\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...addGuideObj.sections.slice(0, selectedSectionIndex),\n                ...addGuideObj.sections.slice(selectedSectionIndex + 1)\n            ],\n        });\n    }\n\n    const renderSections = (sections: Array<GuideSectionViewModel>) => {\n        const orderedSections = sections.sort((a: GuideSectionViewModel, b: GuideSectionViewModel) => a.sortOrder - b.sortOrder);\n        return (\n            <>\n                {\n                    orderedSections.map((section: GuideSectionViewModel, index: number) => (\n                        <div key={`${section.guid}-${index}-${section.items.map(si => si.guid).join(',')}`} className=\"container section\">\n                            <div className=\"row\">\n                                <div className=\"col-12 pt1\">\n                                    <span className=\"pointer\" onClick={editSectionHeading(section.guid)}>\n                                        <h3 style={{ display: 'inline' }}>{section.heading}&nbsp;&nbsp;&nbsp;</h3>\n                                        <Popup wide\n                                            content=\"Edit heading\"\n                                            trigger={<Icon name=\"edit\" />}\n                                        />\n                                    </span>\n\n                                    <CreateGuideSectionItems\n                                        addGuideObj={addGuideObj}\n                                        section={section}\n                                        setAddGuideObj={setAddGuideObj}\n                                    />\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12 pt1\">\n                                            <button className=\"button mt1\" onClick={() => setSelectedSectionGuid(section.guid)}>Add item</button>\n                                        </div>\n                                    </div>\n\n                                    <ActionButtons\n                                        index={index}\n                                        additionalClassName=\"pt1\"\n                                        itemSpecificName=\"section\"\n                                        totalLength={orderedSections.length}\n                                        saveItem={editSectionDetails(section.guid)}\n                                        moveItem={moveSection(section.guid)}\n                                        deleteItem={deleteSection(section.guid)}\n                                    />\n\n                                    <div className=\"row\"><div className=\"col-12 pt2\"><hr /></div></div>\n                                </div>\n                            </div>\n                        </div>\n                    ))\n                }\n            </>\n        );\n    }\n\n    const sections = (addGuideObj.sections ?? []);\n    if (sections.length < 1) {\n        return (\n            <div className=\"container\">\n                <div className=\"row full pb2\">\n                    <div className=\"col-12\">\n                        <h3 className=\"ta-center pt1\">No sections added yet</h3>\n                    </div>\n                </div>\n                <div className=\"row full pb2\">\n                    <div className=\"col-12 pt1 ta-center\">\n                        <button className=\"button mt1\" onClick={addSection}>Add Section</button>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    return (\n        <>\n            {renderSections([...sections])}\n            <div className=\"container\">\n                <div className=\"col-12 pt1 ta-center\">\n                    <button className=\"button mt1\" onClick={addSection}>Add Section</button>\n                </div>\n            </div>\n        </>\n    );\n};\n","import classNames from 'classnames';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { useParams } from \"react-router-dom\";\nimport { Form, Input, InputOnChangeData } from 'semantic-ui-react';\nimport { SmallBanner } from '../../components/common/banner/banner';\nimport { ConditionalToolTip } from '../../components/common/conditionalTooltip';\nimport { DropDown } from '../../components/common/dropDown/dropDown';\nimport { Error } from '../../components/common/error';\nimport { Loading } from '../../components/common/loading';\nimport { LoginRequired } from '../../components/common/loginRequired';\nimport { BaseDialog } from '../../components/common/modal/baseDialog';\nimport { TagsFormInput } from '../../components/common/tagComponent';\nimport { AddImageSection, AddLinkSection, AddMarkdownSection, AddTextSection } from '../../components/guide/addGuideComponents';\nimport { NetworkState } from '../../constants/networkState';\nimport { guides } from '../../constants/route';\nimport { DropDownWithIcon } from '../../contracts/dropdown/dropDownWithIcon';\nimport { GuideSectionItemType } from '../../contracts/generated/Enum/guideSectionItemType';\nimport { AddOrEditGuideViewModel } from '../../contracts/generated/ViewModel/Guide/addOrEditGuideViewModel';\nimport { GuideSectionItemViewModel } from '../../contracts/generated/ViewModel/Guide/guideSectionItemViewModel';\nimport { GuideSectionViewModel } from '../../contracts/generated/ViewModel/Guide/guideSectionViewModel';\nimport { errorDialog, getStringDialog, successDialog } from '../../helper/dialogHelper';\nimport { newGuid } from '../../helper/guidHelper';\nimport { DependencyInjectionContext } from '../../integration/dependencyInjection';\nimport { appDetailsToAppDropDownMapper } from '../../mapper/appDetailsMapper';\nimport { languageDetailsToGuideLanguageDropDownMapper } from '../../mapper/languageDetailsMapper';\nimport { CreateGuideSections } from './createGuideSections';\nimport { mapStateToProps } from './guidListPage.Redux';\n\ninterface IFromRedux {\n    userGuid: string;\n}\n\ninterface IProps extends IFromRedux { }\n\nexport const CreateGuidePageUnconnected: React.FC<IProps> = (props: IProps) => {\n    const { id: existingGuideId }: any = useParams();\n    const isEditing = (existingGuideId != null && existingGuideId.length > 0);\n    const services = useContext(DependencyInjectionContext);\n    const history = useHistory();\n\n    // Meta\n    const [appStatus, setAppStatus] = useState<NetworkState>(NetworkState.Pending);\n    const [appDropDowns, setAppDropDowns] = useState<Array<DropDownWithIcon>>([]);\n    const [langStatus, setLangStatus] = useState<NetworkState>(NetworkState.Pending);\n    const [langDropDowns, setLangDropDowns] = useState<Array<DropDownWithIcon>>([]);\n\n    const [selectedSectionGuid, setSelectedSectionGuid] = useState<string>();\n\n    // Create specific\n    const [submissionStatus, setSubmissionStatus] = useState<NetworkState>(isEditing ? NetworkState.Loading : NetworkState.Pending);\n    const [addGuideObj, setAddGuideObj] = useState<AddOrEditGuideViewModel>({\n        appGuid: '',\n        languageCode: '',\n\n        title: '',\n        subTitle: '',\n        minutes: 0,\n        tags: [],\n        sections: [],\n        showCreatedByUser: true,\n        updatedGuideDetails: false\n    });\n\n    const isNotLoggedIn = props.userGuid == null || props.userGuid.length < 1;\n\n    useEffect(() => {\n        if (isNotLoggedIn) return;\n        fetchAppData();\n        fetchLanguageData();\n        fetchExistingGuide();\n        // eslint-disable-next-line\n    }, [props.userGuid]);\n\n    const fetchAppData = async () => {\n        const appsResult = await services.assistantAppsApiService.getApps();\n        if (!appsResult.isSuccess) {\n            setAppStatus(NetworkState.Error);\n            return;\n        }\n        setAppDropDowns(appDetailsToAppDropDownMapper(appsResult.value));\n        setAppStatus(NetworkState.Success);\n    }\n\n    const fetchLanguageData = async () => {\n        const langResult = await services.assistantAppsApiService.getLanguages();\n        if (!langResult.isSuccess) {\n            setLangStatus(NetworkState.Error);\n            return;\n        }\n        setLangDropDowns(languageDetailsToGuideLanguageDropDownMapper(langResult.value));\n        setLangStatus(NetworkState.Success);\n    }\n\n    const fetchExistingGuide = async () => {\n        if (!isEditing) {\n            if (submissionStatus === NetworkState.Loading) {\n                setSubmissionStatus(NetworkState.Success);\n            }\n            return;\n        }\n        const fetchGuide = await services.assistantAppsApiService.getGuidesById(existingGuideId);\n        if (fetchGuide.isSuccess === false) {\n            errorDialog('Loading Guide failed', 'Could not load the selected guide.');\n            return;\n        }\n\n        setAddGuideObj({\n            appGuid: fetchGuide.value.appGuid,\n            languageCode: fetchGuide.value.languageCode,\n\n            title: fetchGuide.value.title,\n            subTitle: fetchGuide.value.subTitle,\n            minutes: fetchGuide.value.minutes,\n            tags: fetchGuide.value.tags,\n            sections: fetchGuide.value.sections,\n            showCreatedByUser: fetchGuide.value.showCreatedByUser,\n            updatedGuideDetails: false,\n        });\n        setSubmissionStatus(NetworkState.Success);\n    }\n\n    const setDetailProperty = (prop: string, value: any) => {\n        const updatedGuideDetails = prop.includes('appGuid');\n        setAddGuideObj({\n            ...addGuideObj,\n            [prop]: value,\n            updatedGuideDetails: addGuideObj.updatedGuideDetails === true ? true : updatedGuideDetails,\n        });\n    }\n\n    const addSection = async () => {\n        const newHeading = await getStringDialog('New Section heading', '', 'Step 1...');\n        if (newHeading == null || newHeading.length < 1) return;\n        const newSection: GuideSectionViewModel = {\n            guid: newGuid(),\n            heading: newHeading,\n            sortOrder: addGuideObj.sections.length,\n            items: [],\n        };\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...addGuideObj.sections,\n                newSection,\n            ],\n        });\n    }\n\n    const addSectionItem = (sectionId: string, type: GuideSectionItemType) => () => {\n        if (sectionId == null || sectionId.length < 1) return;\n\n        setAddGuideObj({\n            ...addGuideObj,\n            sections: [\n                ...addGuideObj.sections.map((sec: GuideSectionViewModel) => {\n                    if (sec.guid !== sectionId) return sec;\n\n                    const newSectionItem: GuideSectionItemViewModel = {\n                        guid: newGuid(),\n                        type: type,\n                        sortOrder: sec.items.length,\n                        content: '',\n                        additionalContent: '',\n                        tableColumnNames: [],\n                        tableData: [],\n                    };\n                    (newSectionItem as any).isNew = true;\n\n                    return {\n                        ...sec,\n                        items: [\n                            ...sec.items,\n                            newSectionItem\n                        ]\n                    }\n                }),\n            ],\n        });\n        setSelectedSectionGuid(undefined);\n    }\n\n    const submitGuide = async () => {\n        setSubmissionStatus(NetworkState.Loading);\n\n        if (isEditing === false) {\n            const addResult = await services.assistantAppsApiService.submitGuide(addGuideObj);\n            if (addResult.isSuccess === false) {\n                errorDialog('Submission failed', 'Could not submit your guide. ' + addResult.errorMessage);\n                setSubmissionStatus(NetworkState.Error);\n                return;\n            }\n            successDialog('Success', 'Your guide has been submitted!');\n        } else {\n            const editResult = await services.assistantAppsApiService.editGuide(existingGuideId, addGuideObj);\n            if (editResult.isSuccess === false) {\n                errorDialog('Edit failed', 'Could not edit your guide. ' + editResult.errorMessage);\n                setSubmissionStatus(NetworkState.Error);\n                return;\n            }\n            successDialog('Success', 'Your guide has been editted!');\n        }\n        setSubmissionStatus(NetworkState.Success);\n        history.push(guides);\n    }\n\n    const banner = (\n        <SmallBanner\n            title={isEditing ? \"Edit a Guide\" : \"Create a Guide\"}\n            descrip=\"Tool for creating and editing Guides for the the Assistant Apps\"\n        />\n    );\n\n    if (isNotLoggedIn) {\n        return (\n            <>\n                {banner}\n                <div className=\"container\">\n                    <div className=\"row full pt3 pb3\">\n                        <LoginRequired />\n                    </div>\n                </div>\n            </>\n        );\n    }\n\n    // console.log({ ...addGuideObj });\n\n    const firstInvalidSection = (addGuideObj.sections as Array<GuideSectionViewModel>)\n        .find((s: GuideSectionViewModel) => s.items.length < 1);\n    const submitDisabled =\n        (addGuideObj.appGuid == null) ||\n        (addGuideObj.appGuid.length < 1) ||\n        (addGuideObj.languageCode == null) ||\n        (addGuideObj.languageCode.length < 1) ||\n        (addGuideObj.sections == null) ||\n        (addGuideObj.sections.length < 1) ||\n        // (addGuideObj.title.length < 5) ||\n        // (addGuideObj.subTitle.length < 10) ||\n        (firstInvalidSection != null);\n\n    return (\n        <div className=\"guide-page\">\n            {banner}\n            {\n                (submissionStatus === NetworkState.Error) &&\n                <Error message=\"Something went wrong submitting your guide\" />\n            }\n            <div className=\"container\">\n                <div className=\"row full pt3 pb1\">\n                    <div className=\"col-12 col-md-6\">\n                        <Form>\n                            <Form.Field >\n                                <label>Please select App you would like to create a guide for</label>\n                            </Form.Field>\n                        </Form>\n                        {\n                            (appStatus !== NetworkState.Error)\n                                ? <DropDown\n                                    placeholder=\"Select Apps\"\n                                    options={appDropDowns}\n                                    value={addGuideObj.appGuid}\n                                    isLoading={appStatus === NetworkState.Loading}\n                                    onChange={(app: any) => setDetailProperty('appGuid', app)}\n                                />\n                                : <p>Error loading apps, please refresh the page or contact us</p>\n                        }\n                    </div>\n                    <div className=\"col-12 col-md-6 custom-drop-down pt1 pt-md-0\">\n                        <Form>\n                            <Form.Field >\n                                <label>Please select the language your guide will be written in</label>\n                            </Form.Field>\n                        </Form>\n                        {\n                            (langStatus !== NetworkState.Error)\n                                ? <DropDown\n                                    placeholder=\"Select Language\"\n                                    options={langDropDowns}\n                                    value={addGuideObj.languageCode}\n                                    isLoading={langStatus === NetworkState.Loading}\n                                    onChange={(app: any) => setDetailProperty('languageCode', app)}\n                                />\n                                : <p>Error loading languages, please refresh the page or contact us</p>\n                        }\n                    </div>\n                    <div className=\"col-12 col-md-12\">\n                        <Form>\n                            <Form.Group>\n                                <Form.Field width=\"6\" className=\"pt1\">\n                                    <label>Title</label>\n                                    <Input\n                                        placeholder=\"How to...\"\n                                        defaultValue={addGuideObj.title}\n                                        onChange={(_: any, data: InputOnChangeData) => setDetailProperty('title', data.value)}\n                                    />\n                                </Form.Field>\n                                <Form.Field width=\"10\" className=\"pt1\">\n                                    <label>Subtitle</label>\n                                    <Input\n                                        placeholder=\"This guide will help you...\"\n                                        defaultValue={addGuideObj.subTitle}\n                                        onChange={(_: any, data: InputOnChangeData) => setDetailProperty('subTitle', data.value)}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                            <Form.Group>\n                                <Form.Field width=\"12\" className=\"pt1 pt-md-0\">\n                                    <label>Tags</label>\n                                    <TagsFormInput\n                                        existingTags={addGuideObj.tags}\n                                        setTags={(tags: Array<string>) => setDetailProperty('tags', tags)}\n                                    />\n                                </Form.Field>\n                                <Form.Field width=\"4\" className=\"pt1 pt-md-0\">\n                                    <label>How long is your guide</label>\n                                    <Input\n                                        placeholder=\"5\" type=\"number\" fluid={true}\n                                        label={{ basic: true, content: 'minutes' }}\n                                        labelPosition=\"right\"\n                                        defaultValue={addGuideObj.minutes}\n                                        onChange={(_: any, data: InputOnChangeData) => setDetailProperty('minutes', data.value)}\n                                    />\n                                </Form.Field>\n                            </Form.Group>\n                        </Form>\n                    </div>\n                </div>\n                <hr />\n            </div>\n            <CreateGuideSections\n                addGuideObj={addGuideObj}\n                addSection={addSection}\n                setAddGuideObj={setAddGuideObj}\n                setSelectedSectionGuid={setSelectedSectionGuid}\n            />\n            <div className=\"container pt2\">\n                <hr />\n                <div className=\"row full pb3\">\n                    <div className=\"col-12 ta-center pb1\">\n                        <ConditionalToolTip\n                            message=\"Must choose an App, a Language, add at least one section and add add an item to it.\"\n                            showToolTip={submitDisabled}>\n                            <button className={classNames(\"button full submit_btn mt1\", { disabled: submitDisabled })}\n                                onClick={() => !submitDisabled && submitGuide()}>\n                                {\n                                    isEditing\n                                        ? <span>Submit <b>new version</b></span>\n                                        : <span>Submit Guide</span>\n                                }\n                            </button>\n                        </ConditionalToolTip>\n                    </div>\n                </div>\n            </div>\n            <BaseDialog\n                isOpen={selectedSectionGuid != null}\n                closeModal={() => setSelectedSectionGuid(undefined)}\n            >\n                <div className=\"row justify\">\n                    <AddTextSection onClick={addSectionItem(selectedSectionGuid!, GuideSectionItemType.text)} />\n                    <AddLinkSection onClick={addSectionItem(selectedSectionGuid!, GuideSectionItemType.link)} />\n                    <AddImageSection onClick={addSectionItem(selectedSectionGuid!, GuideSectionItemType.image)} />\n                    <AddMarkdownSection onClick={addSectionItem(selectedSectionGuid!, GuideSectionItemType.markdown)} />\n                </div>\n            </BaseDialog>\n            {\n                (submissionStatus === NetworkState.Loading) &&\n                <Loading />\n            }\n        </div>\n    );\n};\n\nexport const CreateGuidePage = connect(mapStateToProps)(CreateGuidePageUnconnected);\n","import React from 'react';\n\nexport const NotFoundPresenter: React.FC = () => {\n    return (\n        <section className=\"about-area area-padding-bottom\">\n            <div className=\"container\">\n                <div className=\"row align-items-center\">\n\n                    <div className=\"col-lg-6\">\n                        <h4>Not Found</h4>\n                    </div>\n                </div>\n            </div>\n        </section>\n    );\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { mapDispatchToProps, mapStateToProps } from './App.redux';\nimport { Footer } from './components/common/footer/footer';\nimport { Header } from './components/common/header/header';\nimport { ScrollToTop } from './components/common/scroll/scrollToTop';\nimport * as route from './constants/route';\nimport { HomePresenter } from './pages/home/homePresenter';\nimport { TranslationContainer } from './pages/translation/translationContainer';\nimport { StatisticsPresenter } from './pages/stats/statsPresenter';\nimport { GuideListPage } from './pages/guide/guideListPage';\nimport { CreateGuidePage } from './pages/guide/createGuidePage';\nimport { NotFoundPresenter } from './pages/notFoundPresenter';\nimport { StateSettingReducer } from './redux/state/StateSettingReducer';\nimport { Loading } from './components/common/loading';\n\ninterface IProps extends StateSettingReducer {\n\tisLoading: boolean;\n\ttoggleMenu: () => void;\n}\n\nconst AppUnconnected: React.FC<any> = (props: IProps) => {\n\treturn (\n\t\t<>\n\t\t\t<Header />\n\t\t\t<ScrollToTop>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact={true} path={route.home} component={HomePresenter} />\n\t\t\t\t\t<Route path={route.translation} component={TranslationContainer} />\n\t\t\t\t\t<Route path={route.translationAlt} component={TranslationContainer} />\n\t\t\t\t\t<Route path={route.stats} component={StatisticsPresenter} />\n\t\t\t\t\t<Route path={route.guides} component={GuideListPage} />\n\t\t\t\t\t<Route path={route.createGuide} component={CreateGuidePage} />\n\t\t\t\t\t<Route path={route.editGuide} component={CreateGuidePage} />\n\t\t\t\t\t<Route component={NotFoundPresenter} />\n\t\t\t\t</Switch>\n\t\t\t</ScrollToTop>\n\t\t\t<Footer />\n\t\t\t{\n\t\t\t\tprops.isLoading && <Loading />\n\t\t\t}\n\t\t</>\n\t);\n}\nexport const App = connect(mapStateToProps, mapDispatchToProps)(AppUnconnected);\n","import { State } from './redux/state';\nimport { setDarkMode, toggleMenu } from './redux/modules/setting/action';\nimport { getIsDark, getMenuVisibility } from './redux/modules/setting/selector';\nimport { getIsLoading } from './redux/modules/common/selector';\n\nexport const mapStateToProps = (state: State) => {\n    return {\n        isDark: getIsDark(state),\n        isMenuOpen: getMenuVisibility(state),\n        isLoading: getIsLoading(state),\n    };\n};\n\nexport const mapDispatchToProps = (dispatch: any) => {\n\n    let newProps: any = {};\n    newProps.setDarkMode = (isDark: boolean) => {\n        dispatch(setDarkMode(isDark));\n    };\n    newProps.toggleMenu = () => {\n        dispatch(toggleMenu());\n    };\n    return { ...newProps };\n}","import * as type from \"./type\";\n\nexport const setDarkMode = (isDark: boolean) => {\n    return {\n        isDark,\n        type: type.DARKMODE,\n    }\n}\n\nexport const toggleMenu = () => {\n    return {\n        type: type.TOGGLEMENU,\n    }\n}\n","export const getJSON = (url: string, callback: any) => {\n    var xhr = new XMLHttpRequest();\n    xhr.open('GET', url, true);\n    xhr.responseType = 'json';\n    xhr.onload = function () {\n        var status = xhr.status;\n        if (status === 200) {\n            callback(true, xhr.response);\n        } else {\n            callback(false, xhr.response);\n        }\n    };\n    xhr.send();\n};\n\nexport const defaultConfig = {\n    googleAnalyticsEnabled: false,\n    consoleLogDebug: true,\n    useServiceWorker: false,\n    apiUrl: \"https://api.assistantapps.com\",\n}","\n\nexport const applyIsDarkToBody = (isDark: boolean) => {\n    const bodyTag = document.querySelector('body');\n    if (bodyTag != null) {\n        if (isDark) {\n            bodyTag.classList.add('isDark');\n        } else {\n            bodyTag.classList.remove('isDark');\n        }\n    }\n}","import * as type from './type';\nimport * as CacheKey from '../../cacheKey';\nimport { StateCommonReducer } from '../../state/StateCommonReducer';\n\nexport const initialCommonState: StateCommonReducer = {\n    isLoading: false,\n    title: \"Loading\",\n    userGuid: '',\n    userName: '',\n    userProfileUrl: '',\n    userDetailsExpiryDate: new Date(),\n}\n\nexport const commonReducer = (state = initialCommonState, action: any) => {\n    switch (action.type) {\n        case type.LOADING:\n            return Object.assign({}, state, {\n                isLoading: action.isLoading,\n                text: action.text\n            });\n        case type.LOGIN:\n            return Object.assign({}, state, {\n                userGuid: action.userGuid,\n                userName: action.userName,\n                userProfileUrl: action.userProfileUrl,\n                userDetailsExpiryDate: action.userDetailsExpiryDate,\n            });\n        case type.LOGOUT:\n            localStorage.removeItem(CacheKey.CommonReducerKey);\n            return Object.assign({}, state, {\n                userGuid: '',\n                userName: '',\n                userProfileUrl: '',\n                userDetailsDate: null,\n            });\n        default:\n            return state\n    }\n}\n","import * as type from './type';\n\nimport { StateSettingReducer } from '../../state/StateSettingReducer';\nimport { applyIsDarkToBody } from '../../../helper/bodyHelper';\n\nexport const initialSettingState: StateSettingReducer = {\n    isDark: true,\n    menuIsVisible: false,\n}\n\nexport const settingReducer = (state = initialSettingState, action: any) => {\n    switch (action.type) {\n        case type.DARKMODE:\n            applyIsDarkToBody(action.isDark);\n            return Object.assign({}, state, {\n                isDark: action.isDark\n            });\n        case type.TOGGLEMENU:\n            const htmlTag = document.querySelector('html');\n            if (htmlTag != null) {\n                htmlTag.classList.toggle('nav-open');\n            }\n            return Object.assign({}, state, {\n                menuIsVisible: htmlTag?.classList?.contains('nav-open') ?? false\n            });\n        default:\n            return state\n    }\n}\n","import * as type from './type'\nimport { StateTranslationReducer } from '../../state/StateTranslationReducer';\nimport { TranslationItem } from '../../entities/translation/translationItem';\n\nexport const initialTranslationState: StateTranslationReducer = {\n    translationItems: []\n}\n\nexport const translationReducer = (state = initialTranslationState, action: any) => {\n    switch (action.type) {\n        case type.INITTRANSLATIONS:\n            return Object.assign({}, state, {\n                translationItems: [...action.translationItems],\n            });\n        case type.EDITITEM:\n            return Object.assign({}, state, {\n                translationItems: state.translationItems.map(\n                    (item: TranslationItem, i) => item.key === action.key\n                        ? { ...action.translationItem }\n                        : item\n                ),\n            });\n        default:\n            return state\n    }\n}\n","import { combineReducers } from 'redux'\n\nimport { commonReducer } from './modules/common'\nimport { setLoadingStatus } from './modules/common/action';\n\nimport { CommonFunctions } from './entities/CommonFunctions';\nimport { ICommonFunctions } from './entities/interface/ICommonFunctions';\n\nimport { settingReducer } from './modules/setting';\nimport { translationReducer } from './modules/translation';\n\n\nexport const reducer = combineReducers({\n    commonReducer,\n    settingReducer,\n    translationReducer,\n});\n\nexport const commonMapDispatchToProps = (dispatch: any): ICommonFunctions => {\n    const commonFunctions = new CommonFunctions();\n    commonFunctions.setLoadingStatus = (isLoading: boolean, title?: string) => {\n        dispatch(setLoadingStatus(isLoading, title))\n    };\n\n    return Object.assign({}, commonFunctions);\n}\n","export const CommonReducerKey = 'CommonReducer';\nexport const SettingReducerKey = 'SettingReducer';\nexport const TranslationReducerKey = 'TranslationReducer';","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { DOMAttributes } from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { App } from './App';\n// import { UpdateButton } from './components/updateButton';\n// import { initLocalization } from './integration/i18n';\n// import { initAnalytics } from './integration/analytics';\n// import { updateServiceWorker } from './integration/serviceWorker';\nimport { DependencyInjectionProvider } from './integration/dependencyInjection';\nimport { getJSON, defaultConfig } from './utils';\nimport { applyIsDarkToBody } from './helper/bodyHelper';\nimport { modalSetup } from './components/common/modal/baseDialog';\n\nimport { loadStateFromLocalStorage, saveStateToLocalStorage } from './redux/stateFromLocalStorage';\nimport { reducer } from './redux';\n\nimport * as serviceWorker from './serviceWorker';\n\nimport './index.scss';\nimport 'react-image-lightbox/style.css';\nimport 'semantic-ui-css/semantic.min.css';\nimport \"@pathofdev/react-tag-input/build/index.css\";\nimport 'react-lazy-load-image-component/src/effects/blur.css';\n\ntype CustomElement<T> = Partial<T & DOMAttributes<T> & { children: any }>;\n\ndeclare global {\n  interface Window { config: any; registration: any }\n  namespace JSX {\n    interface IntrinsicElements {\n      ['assistant-apps-translation-leaderboard']: CustomElement<any>;\n    }\n  }\n}\nconst reactAppId = 'assistantApp';\n\nlet persistedState: any = loadStateFromLocalStorage();\npersistedState.settingReducer.menuIsVisible = false;\napplyIsDarkToBody(persistedState.settingReducer.isDark);\n\nconst store = createStore(\n  reducer,\n  persistedState,\n);\n\nstore.subscribe(() => saveStateToLocalStorage(store));\n\nwindow.config = window.config || {};\ngetJSON('/assets/config.json', (status: boolean, response: string) => {\n  window.config = (status === true)\n    ? response || {}\n    : defaultConfig;\n\n  if (window.config.consoleLogDebug) console.log('Config', window.config);\n\n  // initAnalytics();\n  // initLocalization(store.getState()?.settingReducer?.selectedLanguage ?? 'en');\n  modalSetup(reactAppId)\n\n  ReactDOM.render(\n    <React.StrictMode>\n      <DependencyInjectionProvider>\n        <Provider store={store}>\n          <BrowserRouter>\n            <App />\n          </BrowserRouter>\n        </Provider>\n      </DependencyInjectionProvider>\n    </React.StrictMode>\n    , document.getElementById(reactAppId));\n\n  if (window.config.useServiceWorker) {\n    serviceWorker.register({\n      onUpdate: registration => {\n        console.log('ServiceWorker Update')\n        // toast.info(<UpdateButton onClick={() => updateServiceWorker(registration)} />, {\n        //   autoClose: false,\n        //   hideProgressBar: true,\n        //   closeOnClick: true,\n        //   pauseOnHover: true,\n        //   draggable: true,\n        // });\n      }\n    });\n  }\n  else {\n    serviceWorker.unregister();\n  }\n})\n\n","import * as CacheKey from './cacheKey';\n\nimport { initialCommonState } from './modules/common/index';\nimport { initialSettingState } from './modules/setting/index';\nimport { initialTranslationState } from './modules/translation/index';\nimport { StateCommonReducer } from './state/StateCommonReducer';\nimport { StateSettingReducer } from './state/StateSettingReducer';\n\n\nexport const loadStateFromLocalStorage = () => {\n    let commonReducer = initialCommonState;\n    const storedCommonReducer = localStorage.getItem(CacheKey.CommonReducerKey);\n    if (storedCommonReducer && storedCommonReducer !== \"undefined\") {\n        commonReducer = JSON.parse(storedCommonReducer || '{}');\n    }\n\n    let settingReducer = initialSettingState;\n    const storedSettingReducer = localStorage.getItem(CacheKey.SettingReducerKey);\n    if (storedSettingReducer && storedSettingReducer !== \"undefined\") {\n        settingReducer = JSON.parse(storedSettingReducer || '{}');\n    }\n\n    let translationReducer = initialTranslationState;\n    const storedTranslationReducer = localStorage.getItem(CacheKey.TranslationReducerKey);\n    if (storedTranslationReducer && storedTranslationReducer !== \"undefined\") {\n        translationReducer = JSON.parse(storedTranslationReducer || '{}');\n    }\n\n    const persistedState: any = {\n        settingReducer,\n        commonReducer,\n        translationReducer\n    }\n    return persistedState;\n}\n\nexport const saveStateToLocalStorage = (store: any) => {\n    const currentCommonReducer = store.getState().commonReducer;\n    const storedCommonReducer: StateCommonReducer = JSON.parse(localStorage.getItem(CacheKey.CommonReducerKey) || '{}');\n    if (storedCommonReducer == null\n        || storedCommonReducer.userGuid !== currentCommonReducer.userGuid\n        || storedCommonReducer.userName !== currentCommonReducer.userName\n        || storedCommonReducer.userProfileUrl !== currentCommonReducer.userProfileUrl\n        || storedCommonReducer.userDetailsExpiryDate !== currentCommonReducer.userDetailsExpiryDate\n    ) {\n        currentCommonReducer.isLoading = false;\n        localStorage.setItem(CacheKey.CommonReducerKey, JSON.stringify(currentCommonReducer));\n    }\n\n    const currentSettingReducer = store.getState().settingReducer;\n    const storedSettingReducer: StateSettingReducer = JSON.parse(localStorage.getItem(CacheKey.SettingReducerKey) || '{}');\n    if (storedSettingReducer == null\n        || storedSettingReducer.isDark !== currentSettingReducer.isDark\n    ) {\n        localStorage.setItem(CacheKey.SettingReducerKey, JSON.stringify(currentSettingReducer));\n    }\n\n    const currentTranslationReducer = store.getState().translationReducer;\n    const storedTranslationReducer = localStorage.getItem(CacheKey.TranslationReducerKey);\n    if (storedTranslationReducer == null\n        || storedTranslationReducer !== JSON.stringify(currentTranslationReducer?.translationItems || [])) {\n        localStorage.setItem(CacheKey.TranslationReducerKey, JSON.stringify(currentTranslationReducer));\n    }\n}"],"sourceRoot":""}